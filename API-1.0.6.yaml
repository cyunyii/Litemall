swagger: "2.0"
info:
  description: |-
   - 2020年软件工程专业《软件工程》、《面向对象分析分析与设计》、《JavaEE平台技术》课程设计API，共四个分工模块， 
   - 权限模块(privilege), 
   - 其他模块（user, footprint, favorite, advertisement, aftersales, address,cart,share,time），
   - 订单模块（order, freight, payment）,
   - 商品模块（goods,flashsale,coupon,groupon,presale,shop,comment）
   - 通用错误处理
   所有在路径上的id不存在，返回状态码404，errno = 0， errmsg 自定义
   所有参数的错误返回状态码400，errno = 0， errmsg 自定义
  version: 1.0.6
  title: "基于面向对象的电子商城系统后端API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "mingqiu@xmu.edu.cn"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
# host: "172.16.0.183"
# basePath: "/v1"
tags:
- name: "user"
  description: "买家用户服务"
- name: "footprint"
  description: "足迹服务"
- name: "favorite"
  description: "商品收藏服务"
- name: "advertise"
  description: "广告服务"
- name: "aftersale"
  description: "售后服务"
- name: "address"
  description: "地址服务"
- name: "cart"
  description: "购物车服务"
- name: "share"
  description: "分享服务"
- name: "privilege"
  description: "权限服务"
- name: "order"
  description: "订单服务"
- name: "freight"
  description: "运费服务"  
- name: "payment"
  description: "支付服务"
- name: "goods"
  description: "商品服务" 
- name: "time"
  description: "时间段服务"
- name: "flashsale"
  description: "秒杀服务"
- name: "comment"
  description: "评论服务"
- name: "coupon"
  description: "优惠服务"
- name: "presale"
  description: "预售服务"
- name: "groupon"
  description: "团购服务"
- name: "shop"
  description: "店铺服务"  

# schemes:
# - "http"

paths:
   #订单    
  /orders/states:
    get:
      tags:
        - "order"
      summary: "获得订单的所有状态"
      description: ""
      operationId: "getorderState"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"
                  
  /orders:
    get:
      tags:
      - "order"
      summary: "买家查询名下订单 (概要)。"
      description: |-
        - 需要登录
        - 允许买家用户（Customer）的使用者使用本 API 查询他自己的订单（普通，团购，预售）。
        - 不会返回已经被逻辑删除的订单。
      operationId: "customerGetAllSimpleOrders"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "orderSn"
        in: "query"
        description: "按订单编号来查询"
        type: "string"
      - name: "state"
        in: "query"
        description: "限制查询订单的状态 (待付款、未评价等)"
        type: "integer"
        format: "int32"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
        
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                
                    type: "array"
                    items:
                      $ref: "#/definitions/SimpleOrderInfo"
                  
    post:
      tags:
        - "order"
      summary: "买家申请建立订单（普通，团购，预售）。"
      description: "需要检查各类的id是否存在，如果id不存在，则无此对象处理, " 
      operationId: "customerPostNewNormalOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "orderInfo"
        in: "body"
        description: "指定新订单的资料"
        schema:
          description: "创建新订单提供的必需信息"
          type: "object"
          properties:
            orderItems:
              description: "所有订单内容物的信息"
              type: "array"
              items:
                type: "object"
                description: "一个订单内容物的信息"
                properties:
                  skuId:
                    description: "商品sku的id"
                    type: "integer"
                    format: "int64"
                  quantity:
                    description: "订购数量"
                    type: "integer"
                    format: "int64"
            consignee:
              description: "收货人"
              type: "string"
            region_id:
              description: "地区id"
              type: "integer"
              format: "int64"
            address:
              description: "详细地址"
              type: "string"
            mobile:
              description: "电话"
              type: "integer"
              format: "int64"
            message:
              description: "附言"
              type: "string"
            coupon_id:
              description: "使用优惠券的id"
              type: "integer"
              format: "int64"
            coupon_activity_id:
              description: "优惠活动id"
              type: "integer"
              format: "int64"
            presale_id:
              description: "预售活动id"
              type: "integer"
              format: "int64" 
            groupon_id:
              description: "要加入的团购id"
              type: "integer"
              format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/OrderInfo"
        "900":
          description: "商品库存不足"

  /orders/{id}:
    get:
      tags:
      - "order"
      summary: "买家查询订单完整信息（普通，团购，预售）。"
      description: "0 普通，1团购， 2预售"
      operationId: "customerGetOrderById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "订单id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/OrderInfo"

    put:
      tags:
      - "order"
      summary: "买家修改本人名下订单。"
      description: |-
        - 需要登录
        - 用户本人调用本 API，只能修改本人的订单。
        - 现在仅允许用户调用本 API 更改未发货订单的收货地址 (在订单被标记发货前可修改 1 次)。
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "订单id"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        description: "操作字段 (状态)"
        required: true
        schema:
          type: "object"
          properties:
            consignee:
              description: "收货人"
              type: "string"
            region_id:
              description: "地区id"
              type: "integer"
              format: "int64"
            address:
              description: "详细地址"
              type: "string"
            mobile:
              description: "电话"
              type: "integer"
              format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
    delete:
      tags:
      - "order"
      summary: "买家取消，逻辑删除本人名下订单。"
      description: |-
        - 需要登录
        - 用户本人调用本 API，只能取消，逻辑删除本人的订单
        - 发货前取消，完成后逻辑删除
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "订单id"
        required: true
        type: "integer"
        format: "int64"
              
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
        "800":
          description: "订单状态禁止"
  
  /orders/{id}/confirm:
    put:
      tags:
      - "order"
      summary: "买家标记确认收货"
      description: |-
        - 需要登录
        - 客户对他本人的、状态为待收货的订单标记确认收货。
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"      
      - name: "id"
        in: "path"
        description: "指定需要返回订单概要信息的订单号"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
        "800":
          description: "订单状态禁止"
  
  /orders/{id}/groupon-normal:
    post:
      tags:
      - "order"
      summary: "买家将团购订单转为普通订单"
      description: |-
        - 需要登录
        - 在团购过程中，买家可以把团购订单转为普通订单。
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"      
      - name: "id"
        in: "path"
        description: "指定需要返回订单概要信息的订单号"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
        "800":
          description: "订单状态禁止"
         
  /shops/{shopId}/orders:
    get:
      tags:
      - "order"
      summary: "店家查询商户所有订单 (概要)。"
      description: |-
        - 需要登录
        - 已经被客户逻辑删除的订单也一并返回。
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"      
      - name: "shopId"
        in: "path"
        description: "商户id (店员只能查询本商铺)"
        required: true
        type: "integer"
        format: "int32"
      - name: "customerId"
        in: "query"
        description: "查询的购买者用户id"
        type: "integer"
        format: "int32"
      - name: "orderSn"
        in: "query"
        description: "按订单Sn来查询"
        type: "string"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/SimpleOrderInfo"
    
    post:
      tags:
        - "order"
      summary: "管理员建立售后订单。"
      description: "此类订单的新建状态是待发货，价格为0" 
      operationId: "customerPostNewAfterSaleOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"      
      - name: "shopId"
        in: "path"
        description: "商户id (店员只能操作本商铺)"
        required: true
        type: "integer"
        format: "int32"
      - name: "orderInfo"
        in: "body"
        description: "指定新订单的资料"
        schema:
          description: "创建新订单提供的必需信息"
          type: "object"
          properties:
            orderItems:
              description: "所有订单内容物的信息"
              type: "array"
              items:
                type: "object"
                description: "一个订单内容物的信息"
                properties:
                  skuId:
                    description: "商品sku的id"
                    type: "integer"
                    format: "int64"
                  quantity:
                    description: "订购数量"
                    type: "integer"
                    format: "int64"
            consignee:
              description: "收货人"
              type: "string"
            region_id:
              description: "地区id"
              type: "integer"
              format: "int64"
            address:
              description: "详细地址"
              type: "string"
            mobile:
              description: "电话"
              type: "integer"
              format: "int64"
            message:
              description: "附言"
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/OrderInfo"
        "900":
          description: "商品库存不足"

  /shops/{shopId}/orders/{id}:
    put:
      tags:
      - "order"
      summary: "店家修改订单 (留言)。"
      description: |-
        - 需要登录
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"      
      - name: "shopId"
        in: "path"
        description: "商户id (店员只能查询本商铺)"
        required: true
        type: "integer"
        format: "int32"
      - name: "id"
        in: "path"
        description: "指定订单号"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        description: "操作字段 (状态)"
        required: true
        schema:
          type: "object"
          properties:
            message:
              description: "附言"
              type: "string"

      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"

    get:
      tags:
      - "order"
      summary: "店家查询店内订单完整信息（普通，团购，预售）"
      description: "0普通，1团购，2预售"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"      
      - name: "shopId"
        in: "path"
        description: "商户id (店员只能查询本商铺)"
        required: true
        type: "integer"
        format: "int32"
      - name: "id"
        in: "path"
        description: "订单id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
               $ref: "#/definitions/SimpleOrderInfo"
                
    delete:
      tags:
      - "order"
      summary: "管理员取消本店铺订单。"
      description: |-
        - 需要登录
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        description: "商户id (店员只能查询本商铺)"
        required: true
        type: "integer"
        format: "int32"
      - name: "id"
        in: "path"
        description: "订单id"
        required: true
        type: "integer"
        format: "int64"
              
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
        "800":
          description: "订单状态禁止"
                
  /shops/{shopId}/orders/{id}/deliver:
    put:
      tags:
      - "order"
      summary: "店家对订单标记发货。"
      description: |-
        - 需要登录
        - 商家可以用此 API 将一个状态为待发货的订单改为待收货，并记录运单信息；或是改变一个状态为待收货的订单的运单信息。
      operationId: "postfreights"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"      
      - name: "shopId"
        in: "path"
        description: "商店id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "订单id"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        description: "指定发货资讯"
        required: true
        schema:
          type: "object"
          properties:
            freightSn: 
              description: "运单号码"
              type: "string"
            
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              
  #运费 
  /freightmodels/{id}/price:
    post:
      tags:
        - "freight"
      summary: "买家用运费模板计算一批订单商品的运费。"
      description: |-
        - 需要登录
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "integer"
        format: "int64"
      - name: "items"
        in: "body"
        description: "订单商品的订货详情"
        required: true
        schema:
          type: "array"
          items:
            type: "object"
            properties:
              skuId:
                    description: "商品sku的id"
                    type: "integer"
                    format: "int64"
              count:
                    description: "订购数量"
                    type: "integer"
                    format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  type: "object"
                  properties:
                    skuId:
                      description: "商品sku的id"
                      type: "integer"
                      format: "int64"
                    count:
                      description: "订购数量"
                      type: "integer"
                      format: "int64"
                    freight:
                      description: "运费"
                      type: "integer"
                      format: "int64"
                
  /shops/{id}/freightmodels:
    post:
      tags:
      - "freight"
      summary: "管理员定义店铺的运费模板。"
      description: |-
        - 需要登录
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"      
      - name: "id"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "freightModelInfo"
        in: "body"
        description: "运费模板资料。"
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "运费模板名"
              type: "string"
            type:
              description: "运费模板类型"
              type: "integer"
            unit:
              description: "计重单位g"
              type: "integer"
              format: "int32" 
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/FreightModel"
    get:
      tags:
      - "freight"
      summary: "获得店铺中商品的运费模板"
      description: |-
        - 需要登录
      parameters:
      - name: "id"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "query"
        description: "模板名称"
        type: "string"
        required: false  
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false  
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                
                    type: "array"
                    items:
                      $ref: "#/definitions/FreightModel"
  
  /shops/{shopId}/freightmodels/{id}/clone:
    post:
      tags:
      - "freight"
      summary: "管理员克隆店铺的运费模板。"
      description: |-
        - 需要登录
        - 模板名称为原加随机数
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"        
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "模板id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/FreightModel"
  
  /freightmodels/{id}:
    get:
      tags:
      - "freight"
      summary: "获得运费模板概要"
      description: |-
        - 需要登录
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"            
      - name: "id"
        in: "path"
        description: "模板id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/FreightModel"
  

  /shops/{shopId}/freightmodels/{id}:
    put:
      tags:
      - "freight"
      summary: "管理员修改店铺的运费模板。"
      description: |-
        - 需要登录
      parameters:
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "运费模板id"
        required: true
        type: "integer"
        format: "int64"
      - name: "freightModelInfo"
        in: "body"
        description: "运费模板资料。"
        required: true
        schema:
          type: "object"
          properties:
            name:
              description: "运费模板名"
              type: "string"
            unit:
              description: "计重单位g"
              type: "integer"
              format: "int32" 
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
        "802":
          description: "运费模板名重复"  
          
    delete:
      tags:
      - "freight"
      summary: "删除运费模板，需同步删除与商品的"
      description: |-
        - 需要登录
      parameters:
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
        
  /shops/{shopId}/freight_models/{id}/default:
    post:
      tags:
      - "freight"
      summary: "店家或管理员为商铺定义默认运费模板。"
      description: |-
        - 需要登录
        - 管理员调用本 API 定义默认运费模板。
      parameters:
      - name: "shopId"
        in: "path"
        description: "商户 ID"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "integer"
        format: "int64"  
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"   
                
  /shops/{shopId}/freightmodels/{id}/weightItems:       
    post:
      tags:
      - "freight"
      summary: "管理员定义重量模板明细。"
      description: |-
        - 需要登录
        - 管理员调用本 API 定义默认运费模板。
      parameters:
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "integer"
        format: "int64"
      - name: "freightModelInfo"
        in: "body"
        description: "运费模板资料。"
        required: true
        schema:
          type: "object"
          properties:
            firstWeight:
              description: "首重"
              type: "integer"
            firstWeightFreight:
              description: "首重价格"
              type: "integer"
              format: "int32"
            tenPrice:
              description: "10kg以下每0.5kg价格"
              type: "integer"
              format: "int32"
            fiftyPrice:
              description: "50kg以下每0.5kg价格"
              type: "integer"
              format: "int32" 
            hundredPrice:
              description: "100kg以下每0.5kg价格"
              type: "integer"
              format: "int32"
            trihunPrice:
              description: "300kg以下每0.5kg价格"
              type: "integer"
              format: "int32"
            abovePrice:
              description: "300kg以上每0.5kg价格"
              type: "integer"
              format: "int32"
            regionId:
              description: "抵达地区码"
              type: "integer"
              format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/WeightModelItem"
        "803":
          description: "运费模板中该地区已经定义"
      
    get:
      tags:
      - "freight"
      summary: "店家或管理员查询某个运费模板的明细。"
      description: |-
        - 需要登录
      parameters:
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        description: "运费模板 ID"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/WeightModelItem"  
  
  /shops/{shopId}/freightmodels/{id}/pieceItems:       
    post:
      tags:
      - "freight"
      summary: "管理员定义件数模板明细。"
      description: |-
        - 需要登录
      parameters:
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "integer"
        format: "int64"
      - name: "freightModelInfo"
        in: "body"
        description: "运费模板资料。"
        required: true
        schema:
          type: "object"
          properties:
            regionId:
              description: "抵达地区码"
              type: "integer"
              format: "int64"
            firstItem:
              description: "首件数"
              type: "integer"
              format: "int32"
            firstItemPrice:
              description: "规则首件运费"
              type: "integer"
              format: "int64"
            additionalItems:
              description: "规则续件数"
              type: "integer"
              format: "int32"
            additionalItemsPrice:
              description: "规则续件运费"
              type: "integer"
              format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/PieceModelItem"
        "803":
          description: "运费模板中该地区已经定义"        
                
    get:
      tags:
      - "freight"
      summary: "店家或管理员查询件数运费模板的明细。"
      description: |-
        - 需要登录
      parameters:
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"      
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        description: "运费模板 ID"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/PieceModelItem"  
  

  /shops/{shopId}/weightItems/{id}:       
    put:
      tags:
      - "freight"
      summary: "店家或管理员修改重量运费模板明细。"
      description: |-
        - 需要登录
        - 店员可以修改本商铺的运费模板。
      parameters:
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "运费明细id"
        required: true
        type: "integer"
        format: "int64"
      - name: "freightModelInfo"
        in: "body"
        description: "运费模板资料。"
        required: true
        schema:
          type: "object"
          properties:
            firstWeight:
              description: "首重"
              type: "integer"
            firstWeightFreight:
              description: "首重价格"
              type: "integer"
              format: "int32"
            tenPrice:
              description: "10kg以下每0.5kg价格"
              type: "integer"
              format: "int32"
            fiftyPrice:
              description: "50kg以下每0.5kg价格"
              type: "integer"
              format: "int32" 
            hundredPrice:
              description: "100kg以下每0.5kg价格"
              type: "integer"
              format: "int32"
            trihunPrice:
              description: "300kg以下每0.5kg价格"
              type: "integer"
              format: "int32"
            abovePrice:
              description: "300kg以上每0.5kg价格"
              type: "integer"
              format: "int32"
            regionId:
              description: "抵达地区码"
              type: "integer"
              format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
        "803":
          description: "运费模板中该地区已经定义"    
  
    delete:
      tags:
      - "freight"
      summary: "店家或管理员删掉重量运费模板明细。"
      description: |-
        - 需要登录
        - 店员可以删掉到他本商店的运费模板。
      parameters:
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "运费明细id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"     
  
  /shops/{shopId}/pieceItems/{id}:       
    put:
      tags:
      - "freight"
      summary: "店家或管理员修改件数运费模板明细。"
      description: |-
        - 需要登录
        - 店员可以修改本商铺的运费模板。
      parameters:
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "运费明细id"
        required: true
        type: "integer"
        format: "int64"
      - name: "freightModelInfo"
        in: "body"
        description: "运费模板资料。"
        required: true
        schema:
          type: "object"
          properties:
            regionId:
              description: "抵达地区码"
              type: "integer"
              format: "int64"
            firstItem:
              description: "首件数"
              type: "integer"
              format: "int32"
            firstItemPrice:
              description: "规则首件运费"
              type: "integer"
              format: "int64"
            additionalItems:
              description: "规则续件数"
              type: "integer"
              format: "int32"
            additionalItemsPrice:
              description: "规则续件运费"
              type: "integer"
              format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
        "803":
          description: "运费模板中该地区已经定义"    
  
    delete:
      tags:
      - "freight"
      summary: "店家或管理员删掉件数运费模板明细。"
      description: |-
        - 需要登录
        - 店员可以删掉到本商店的运费模板。
      parameters:
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "运费明细id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"     


  
  #支付
  /payments/states:
    get:
      tags:
      - "payment"
      summary: "获得支付单的所有状态"
      description: ""
      operationId: "getpaymentState"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"
                  
  /orders/{id}/payments:
    post:
      tags:
      - "payment"
      summary: "买家为订单创建支付单"    
      description: "此API为模拟API，即时返回支付成功，生成paysn"
      operationId: "createPayment"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "订单id"
        required: true
        type: "integer"
        format: "int64"        
      - name: "body"
        in: "body"
        description: "支付信息"
        required: true
        schema:
          type: "object"
          properties:
            price:
              description: "付款金额"
              type: "integer"
              format: "float"
            paymentPattern:
              description: "支付方式"
              type: "string"

      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Payment"

    get:
      tags:
      - "payment"
      summary: "买家查询自己的支付信息"
      operationId: "userQueryPament"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "订单id"
        required: true
        type: "integer"
        format: "int64"        
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Payment"

        
  /shops/{shopId}/orders/{id}/payments:
    get:
      tags:
      - "payment"
      summary: "管理员查询订单的支付信息"
      operationId: "queryPayment"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"   
      - name: "id"
        in: "path"
        description: "订单id"
        required: true
        type: "integer"
        format: "int64"   
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Payment"


  /shops/{shopId}/payments/{id}/refund:
    post:
      tags:
      - "payment"
      summary: "管理员创建退款信息，需检查Payment是否是此商铺的payment"    
      description: "此API为模拟API，即时返回支付成功，生成paysn"
      operationId: "createRefund"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
        format: "int64"   
      - name: "id"
        in: "path"
        description: "支付id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "退款金额"
        required: true
        schema:
          type: "object"
          properties:
            amount:
              type: "integer"
              description: "退款金额"
              
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Refund"

  #商品          
  /spus/states:
    get:
      tags:
      - "goods"
      summary: "获得商品SPU的所有状态"
      description: ""
      operationId: "getgoodspustate"
      produces:
      - "application/json"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"                    

  
  /skus:
    get:
      tags: 
      - "goods"
      summary: "查询sku"
      description:  |-
      operationId: "getSkuList"
      consumes:
          - "application/json"
      produces:
          - "application/json"
      parameters:
      - name: "shopId"
        in: "query"
        type: "integer"
      - name: "skuSn"
        in: "query"
        type: "string"
      - name: "spuId"
        in: "query"
        type: "string"
      - name: "spuSn"
        in: "query"
        type: "string"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false          
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                
                    type: "array"
                    items:
                      $ref: "#/definitions/SimpleSku"
                            
  /skus/{id}:
    get:
      tags: 
      - "goods"
      summary: "获得sku的详细信息"
      description:  |-
      operationId: "getSku"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        type: "string"
        description: "sku id"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Sku"
                    
                      
  /shops/{shopId}/spus/{id}/skus:
    post:
      tags:
      - "goods"
      summary: "管理员添加新的SKU到SPU里"
      operationId: "createSKU"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "shopId"
        in: "path"
        description: "商店id"
        required: true
        type: "integer"
        format: "int64"
      - name: "id"
        in: "path"
        description: "spu id"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        description: "新建需要的SKU信息"
        required: true
        schema:
          properties:
            spuSpec:
              $ref: "#/definitions/Spec"
            sn:
              type: "string"
              description: "商品型号序号(序号由spuSpec中的id，按段组成)"
            name:
              type: "string"
              description: "商品型号名称"
            originalPrice:
              type: "integer"
              format: "int64"
              description: "该型号原价"
            configuration:
              type: "string"
              description: "配置参数JSON"
            weight:
              type: "integer"
              format: "int64"
              description: "重量"
            imageUrl:
              type: "string"
              description: "图片链接"
            inventory:
              type: "integer"
              description: "库存"
            detail:
              type: "string"
              description: "该型号描述"
              
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/SimpleSku"
        "901":
          description: "商品规格重复"

  /shops/{shopId}/skus/{id}/uploadImg:
    post:
      tags:
      - "goods"
      summary: "sku上传图片"    
      description: "如果该sku有图片，需修改该sku的图片，并删除图片文件"
      operationId: "uploadSkuImg"
      consumes: 
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        required: true
        type: "integer"
        description: "店铺id"  
      - name: "id"
        in: "path"
        description: "sku id"
        required: true
        type: "integer"
      - in: "formData"
        name: "img"
        type: "file"
        description: "文件"
        required: true
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"  

  /shops/{shopId}/skus/{id}:
    delete:
      tags:
      - "goods"
      summary: "管理员或店家逻辑删除SKU"
      operationId: "deleteSKU"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "sku_id"
        required: true
        type: "integer"
        format: "int64"
      - name: "shopId"
        in: "path"
        description: "shop id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
    put:
        tags:
        - "goods"
        summary: "管理员或店家修改SKU信息"
        operationId: "modifySKU"
        produces:
        - "application/json"
        parameters:
        - name: "authorization"
          type: "string"
          in: "header"
          description: "用户token"
          required: true
        - name: "shopId"
          in: "path"
          description: "shop id"
          required: true
          type: "integer"
        - name: "id"
          in: "path"
          description: "sku id"
          required: true
          type: "integer"
        - name: "body"
          in: "body"
          description: "可修改的SKU信息"
          required: true
          schema:
            properties:
              name:
                type: "string"
                description: "商品型号名称"
              originalPrice:
                type: "integer"
                format: "int64"
                description: "该型号原价"
              configuration:
                type: "string"
                description: "配置参数JSON"
              weight:
                type: "integer"
                format: "int64"
                description: "重量"
              inventory:
                type: "integer"
                description: "库存"
              detail:
                type: "string"
                description: "该型号描述"
        responses:
          "default":
            description: "成功"
            schema:
              type: "object"
              properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"

  /categories/{id}/subcategories:
    get:
      tags:
      - "goods"
      summary: "查询商品分类关系"  
      description: |-
        - 根据种类ID获取商品下一级分类信息
      operationId: "query_type"
      produces: 
      - "application/json"
      parameters:
       - name: "id"
         in: "path"
         description: "种类id"
         type: "integer"
         required: true
      responses:
          "default":
            description: "成功"
            schema:
              type: "object"
              properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
                data:
                  type: "array"
                  items:
                    $ref: "#/definitions/Category"
  
    post:
      tags:
      - "goods"
      summary: "管理员新增商品类目"
      operationId: "addCategory"
      produces: 
      - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "种类id"
          type: "integer"
          required: true
        - name: "body"
          in: "body"
          description: "类目详细信息"
          required: true
          schema:
            properties:
              name:
                type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
                data:
                  $ref: "#/definitions/Category"

  /categories/{id}:
    put:
      tags:
      - "goods"
      summary: "管理员修改商品类目信息"
      operationId: "modifyGoods_type"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
        - name: "authorization"
          type: "string"
          in: "header"
          description: "用户token"
          required: true
        - name: "id"
          in: "path"
          description: "种类id"
          type: "integer"
          required: true
        - name: "body"
          in: "body"
          description: "类目详细信息"
          required: true
          schema:
            properties:
              name:
                type: "string"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
    delete:
      tags:
      - "goods"
      summary: "管理员删除商品类目信息"
      operationId: "delCategory"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
        - name: "authorization"
          type: "string"
          in: "header"
          description: "用户token"
          required: true
        - name: "id"
          in: "path"
          description: "种类id"
          type: "integer"
          required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
    
          
  /spus/{id}:
    get:
      tags:
      - "goods"
      summary: "查看一条商品SPU的详细信息（无需登录）"
      description: ""
      operationId: "showSpu"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "商品SPU ID"
          required: true
          type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
                data:
                  $ref: "#/definitions/Spu"

  /shops/{id}/spus:
    post:
      tags:
        - "goods"
      summary: "店家新建商品SPU"
      operationId: "addSpu"
      produces: 
        - "application/json"
      parameters:
        - name: "authorization"
          type: "string"
          in: "header"
          description: "用户token"
          required: true
        - in: "path"
          name: "id"
          required: true
          type: "integer"
          format: "int64"
        - name: "body"
          in: "body"
          description: "SPU详细信息"
          required: true
          schema:
            properties:  
              name:
                type: "string"
              decription:
                type: "string"
              specs:
                type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
                data:
                  $ref: "#/definitions/Spu"
                  
  /shops/{shopId}/spus/{id}/uploadImg:
    post:
      tags:
      - "goods"
      summary: "spu上传图片"    
      description: "如果该spu有图片，需修改该spu的图片，并删除图片文件"
      operationId: "uploadSpuImg"
      consumes: 
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        required: true
        type: "integer"
        description: "店铺id"  
      - name: "id"
        in: "path"
        description: "sku id"
        required: true
        type: "integer"
      - in: "formData"
        name: "img"
        type: "file"
        description: "文件"
        required: true
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"  
 
  /shops/{shopId}/spus/{id}:
    put:
      tags:
      - "goods"
      summary: "店家修改商品SPU"
      operationId: "modifyGoodsSpu"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "shopId"
          in: "path"
          required: true
          type: "integer"
          description: "店铺id"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "spu id"            
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "body"
          in: "body"
          description: "SPU详细信息"
          required: true
          schema:
            properties:  
              name:
                type: "string"
              decription:
                type: "string"
              specs:
                type: "string"
              
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
   
    delete:
      tags:
        - "goods"
      summary: "店家逻辑删除商品SPU"
      description: ""
      operationId: "deleteGoodsSpu"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          required: true
          type: "integer"
          description: "店铺id"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "spu id"            

      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
            
  
  /shops/{shopId}/spus/{id}/onshelves:
    put:
      tags:
        - "goods"
      summary: "店家商品上架"
      description: ""
      operationId: "putGoodsOnSale"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          required: true
          type: "integer"
          description: "店铺id"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "spu id" 
            
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
            
          
  /shops/{shopId}/spus/{id}/offshelves:
    put:
      tags:
        - "goods"
      summary: "店家商品下架"
      description: ""
      operationId: "putOffGoodsOnSale"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          required: true
          type: "integer"
          description: "店铺id"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "spu id" 
            
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
  
  /shops/{shopId}/skus/{id}/floatPrices:
    post:
      tags:
      - "goods"
      summary: "管理员新增商品价格浮动"
      description: ""
      operationId: "add_floating_price"
      produces: 
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          required: true
          type: "integer"
          description: "店铺id"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "sku id" 
        - name: "body"
          in: "body"
          description: "可修改的信息"
          required: true
          schema:
            properties:
              activityPrice:
                description: "浮动价格"
                type: "integer"
              beginTime:
                description: "开始时间"
                type: "string"
              endTime:
                description: "开始时间"
                type: "string"
              quantity:
                description: "销售数量"
                type: "integer"
      responses:
        "902":
          description: "商品浮动价格时间冲突"
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
                data:
                  $ref: "#/definitions/FloatPrice"
                  
  /shops/{shopId}/floatPrices/{id}:
    delete:
      tags:
      - "goods"
      summary: "管理员失效商品价格浮动"
      description: ""
      operationId: "invalidFloatPrice"
      produces: 
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          required: true
          type: "integer"
          description: "店铺id"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "浮动价格 id"   
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
    
  /shops/{id}/brands:
    post:
      tags:
      - "goods"
      summary: "管理员新增品牌"
      operationId: "addBrand"
      produces: 
      - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          required: true
          type: "integer"
          description: "店铺id"
        - name: "body"
          in: "body"
          description: "可修改的品牌信息"
          required: true
          schema:
            properties:
              name: 
                description: "品牌名称"
                type: "string"
              detail:
                description: "该品牌描述"
                type: "string"
            
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
                data:
                  $ref: "#/definitions/Brand"
                  
  /shops/{shopId}/brands/{id}/uploadImg:
    post:
      tags:
      - "goods"
      summary: "上传图片"    
      description: "如果该品牌有图片，需修改该品牌的图片，并删除图片文件"
      operationId: "uploadBrandImg"
      consumes: 
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        required: true
        type: "integer"
        description: "店铺id"  
      - name: "id"
        in: "path"
        description: "品牌id"
        required: true
        type: "integer"
      - in: "formData"
        name: "img"
        type: "file"
        description: "文件"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"                
                
  /brands:
    get:
      tags:
      - "goods"
      summary: "查看所有品牌"
      operationId: "queryBrand"
      produces: 
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"   
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/Brand"
    
  /shops/{shopId}/brands/{id}:
    put:
      tags:
      - "goods"
      summary: "管理员修改品牌"
      description: ""
      operationId: "modifyBrand"
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        required: true
        type: "integer"
        description: "店铺id"  
      - name: "id"
        in: "path"
        description: "品牌id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "可修改的品牌信息"
        required: true
        schema:
          properties:
            name: 
              description: "品牌名称"
              type: "string"
            detail:
              description: "该品牌描述"
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功" 
                
    delete:
      tags:
      - "goods"
      summary: "管理员删除品牌"
      description: ""
      operationId: "deleteBrand"
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          required: true
          type: "integer"
          description: "店铺id"  
        - name: "id"
          in: "path"
          description: "品牌id"
          required: true
          type: "integer"
  
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功" 
  
  /shops/{shopId}/spus/{spuId}/categories/{id}:
    post:
      tags:
      - "goods"
      summary: "将SPU加入分类"    
      description: "如果该SPU有分类，需修改该SPU的分类，控制只能加入二级分类"
      operationId: "addSpuCategory"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        required: true
        type: "integer"
        description: "店铺id"  
      - name: "spuId"
        in: "path"
        description: "spu id"
        required: true
        type: "integer"
      - name: "id"
        in: "path"
        description: "分类 id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"   

    delete:
      tags:
      - "goods"
      summary: "将SPU移出分类"    
      description: "如果该SPU变成无分类商品"
      operationId: "removeSpuCategory"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        required: true
        type: "integer"
        description: "店铺id"  
      - name: "spuId"
        in: "path"
        description: "spu id"
        required: true
        type: "integer"
      - name: "id"
        in: "path"
        description: "分类 id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"   
                
  /shops/{shopId}/spus/{spuId}/brands/{id}:
    post:
      tags:
      - "goods"
      summary: "将SPU加入品牌"    
      description: "如果该SPU有品牌，需修改该SPU的品牌"
      operationId: "addSpuBrand"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        required: true
        type: "integer"
        description: "店铺id"  
      - name: "spuId"
        in: "path"
        description: "spu id"
        required: true
        type: "integer"
      - name: "id"
        in: "path"
        description: "品牌id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"   

    delete:
      tags:
      - "goods"
      summary: "将SPU移出品牌"    
      description: "如果该SPU变成无品牌商品"
      operationId: "removeSpuBrand"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        required: true
        type: "integer"
        description: "店铺id"  
      - name: "spuId"
        in: "path"
        description: "spu id"
        required: true
        type: "integer"
      - name: "id"
        in: "path"
        description: "品牌id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功" 
                
  #秒杀  
  /timesegments/{id}/flashsales:
    get:
      tags:
      - "flashsale"
      summary: "查询某一时段秒杀活动详情"    
      description: "按照当前时间的设定返回秒杀活动"
      operationId: "queryTopicsByTime"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "时间段id"
        required: true
        type: "integer"
      - name: "page"
        in: "query"
        description: "页码"
        required: true
        type: "integer"
      - name: "pageSize"
        in: "query"
        required: true
        description: "每页数目"
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/FlashSale"
    post:
      tags:
      - "flashsale"
      summary: "平台管理员在某个时段下新建秒杀"    
      description: ""
      operationId: "createflash"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          description: "秒杀时间段id"
          type: "string"
          required: true
        - name: "skuid"
          in: "body"
          description: "向专题活动添加的SPU信息"
          required: true
          schema:
            properties:
              flashDate:
                description: "秒杀日期"
                type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/FlashSale"
        "604":
          description: "时段冲突"
  
  /flashsales/current:
    get:
      tags:
      - "flashsale"
      summary: "获取当前时段秒杀列表"    
      description: "无需登录"
      operationId: "getCurrentflash"
      produces:
      - "application/json"
      parameters:
        - name: "page"
          in: "query"
          description: "页码"
          required: true
          type: "integer"
        - name: "pageSize"
          in: "query"
          required: true
          description: "每页数目"
          type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/FlashSale"
                  
  /flashsales/{id}:            
    delete:
      tags:
      - "flashsale"
      summary: "平台管理员删除某个时段秒杀"    
      description: "会取消该广告时段的广告, 也会取消该时段的秒杀"
      operationId: "deleteflashsale"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "秒杀id"
        type: "integer"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
    put:
      tags:
      - "flashsale"
      summary: "管理员修改秒杀活动"    
      description: ""
      operationId: "updateflashsale"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - in: "path"
          name: "id"
          required: true
          description: "秒杀id"
          type: "integer"
        - name: "body"
          in: "body"
          description: "可修改的信息"
          required: true
          schema:
            properties:
              flashDate:
                description: "秒杀日期"
                type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
    
          
  /flashsales/{id}/flashitems:
    post:
      tags:
      - "flashsale"
      summary: "平台管理员向秒杀活动添加商品SKU"    
      operationId: "addSPUofTopic"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "id"
        required: true
        description: "秒杀活动id"
        type: "integer"
      - name: "body"
        in: "body"
        description: "向秒杀活动添加的SKU信息"
        required: true
        schema:
          type: "object"
          properties:
            skuId:
              type: "integer"
              description: "sku id"
            price:
              type: "integer"
              description: "秒杀价格"
            quantity:
              type: "integer"
              description: "秒杀数量"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/FlashSaleItem"
        "607":
          description: "达到时段秒杀上限"
    get:
      tags:
      - "flashsale"
      summary: "获取秒杀活动商品"    
      operationId: "getSPUofTopic"
      produces:
      - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - in: "path"
          name: "id"
          required: true
          description: "秒杀活动id"
          type: "integer"
        - name: "page"
          in: "query"
          description: "页码"
          required: true
          type: "integer"
        - name: "pageSize"
          in: "query"
          required: true
          description: "每页数目"
          type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/FlashSaleItem"

  /flashsales/{fid}/flashitems/{id}:
    delete:
      tags:
      - "flashsale"
      summary: "平台管理员在秒杀活动删除商品SKU"    
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "fid"
        required: true
        description: "秒杀活动id"
        type: "integer"          
      - in: "path"
        name: "id"
        required: true
        description: "秒杀活动项id"
        type: "integer"         
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
                
   #评论        
  /comments/states:
    get:
      tags:
      - "comment"
      summary: "获得评论的所有状态"
      description: ""
      operationId: "getcommentState"
      produces:
      - "application/json"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"     
                  
  /orderitems/{id}/comments:
    post:
      tags:
        - "comment"
      summary: "买家新增sku的评论"
      description:  |-
        - 买家对待评价商品SKU进行评价
        - 需检查用户是否对买了该商品
      operationId: "addSkuComment"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - in: "path"
          name: "id"
          type: "integer"
          required: true
          format: "int64"
          description: "订单明细 ID"   
        - name: "body"
          in: "body"
          description: "评价信息"
          required: true
          schema:
            properties:
              type:
                description: "0好评，1中评，2差评"
                type: "integer"
                format: "int64"
              content: 
                description: "内容"
                type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Comment"
        "903":
          description: "用户没有购买此商品"

  /skus/{id}/comments:    
    get:
      tags:
        - "comment"
      summary: "查看sku的评价列表(已通过审核)"
      description:  |-
        - 无需登录即可根据SKU的id查看商品的所有已通过审核的评论列表
      operationId: "show"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          type: "integer"
          required: true
          format: "int64"
          description: "sku ID"
        - name: "page"
          in: "query"
          description: "页码"
          type: "integer"
          required: false
        - name: "pageSize"
          in: "query"
          description: "每页数目"
          type: "integer"
          required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/Comment"
                    
  /comments/{id}/confirm:
      put:
        tags:
          - "comment"
        summary: "管理员审核评论"
        description:  |-
          - 平台管理员登陆后可以按照评论Id对评论进行审核：通过/不通过
        operationId: "auditComment"
        produces:
          - "application/json"
        consumes:
          - "application/json"
        parameters:
          - in: "header"
            name: "authorization"
            description: "用户token"
            required: true
            type: "string"
          - in: "path"
            name: "id"
            type: "integer"
            required: true
            format: "int64"
            description: "评论 ID"
          - name: "body"
            in: "body"
            description: "可修改的评论信息"
            required: true
            schema:
              properties:
                conclusion:
                  type: "boolean"
        responses:
          "default":
            description: "成功"
            schema:
              type: "object"
              properties:
                errno:
                  type: "integer"
                  example: 0
                errmsg: 
                  type: "string"
                  example: "成功"
  /comments:
    get:
      tags:
        - "comment"
      summary: "买家查看自己的评价记录"
      description:  |-
        - 买家登陆后，可以根据token查看自己提交过的所有评论(包括评论状态)
      operationId: "showComment"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "page"
          in: "query"
          description: "页码"
          type: "integer"
          required: false
        - name: "pageSize"
          in: "query"
          description: "每页数目"
          type: "integer"
          required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/Comment"


  /shops/{id}/comments/all:
    get:
      tags:
        - "comment"
      summary: "管理员查看未审核/已审核评论列表"
      operationId: "showUnAuditComments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "店铺 id"
        type: "integer"
        required: true 
      - name: "state"
        in: "query"
        description: "评论状态"
        type: "integer"
        required: false
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/Comment"

  #优惠
  /coupons/states:
    get:
      tags:
      - "coupon"
      summary: "获得优惠卷的所有状态"
      description: ""
      operationId: "getcouponState"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"
                  
  /shops/{shopId}/spus/{id}/couponactivities:
    post:
      tags:
        - "coupon"
      summary: "管理员新建己方优惠活动"
      description: |-
        - `管理员`新建己方的优惠活动，此时可批量添加限定范围
        - 活动状态即`待上线`
      operationId: "addCouponactivity"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "商店ID"
        - name: "id"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "spu ID"
        - name: "body"
          in: "body"
          description: "可修改的优惠活动信息"
          required: true
          schema:
            properties:
              name:
                type: "string"
                description: "优惠活动名称"
              quantity:
                type: "integer"
                format: "int32"
                description: "优惠券数目，0-不用优惠券"
              quantityType:
                type: "integer"
                format: "int32"
                description: "0-每人数量，1-总数控制"
              validTerm:
                type: "integer"
                format: "int32"
                description: "从领取那天起的有效时间，0-与活动同"
              couponTime:
                type: "string"
                description: "开始领优惠卷时间"  
              beginTime:
                type: "string"
                description: "活动开始时间"
              endTime:
                type: "string"
                description: "活动结束时间"
              strategy:
                type: "string"
                description: "优惠规则"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/CouponActivity"
                
  /shops/{shopId}/couponactivities/{id}/uploadImg:
    post:
      tags:
      - "coupon"
      summary: "上传优惠活动图片"    
      description: "如果该优惠活动有图片，需修改该优惠活动的图片，并删除图片文件"
      consumes: 
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        required: true
        type: "integer"
        description: "店铺id"  
      - name: "id"
        in: "path"
        description: "活动id"
        required: true
        type: "integer"
      - in: "formData"
        name: "img"
        type: "file"
        description: "文件"
        required: true
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"  

  /couponactivities:
    get:
      tags:
        - "coupon"
      summary: "查看上线的优惠活动列表"
      description: '无需登录'
      operationId: "showOwncouponactivities"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "shopId"
          in: "query"
          type: "integer"
          format: "int64"
          required: false
          description: "商店ID"
        - name: "timeline"
          in: "query"
          required: false
          description: "时间：0 还未开始的， 1 明天开始的，2 正在进行中的，3 已经结束的"
          type: "integer"
        - name: "page"
          in: "query"
          description: "页码"
          type: "integer"
          required: false
        - name: "pageSize"
          in: "query"
          description: "每页数目"
          type: "integer"
          required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/SimpleCouponActivity" 
  
  /shops/{id}/couponactivities/invalid:
    get:
      tags:
        - "coupon"
      summary: "查看本店下线的优惠活动列表"
      description: '`管理员`查看，仅可查看己方下线的优惠活动并获取简要信息'
      operationId: "showOwnInvalidcouponactivities"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "商店ID"
        - name: "page"
          in: "query"
          description: "页码"
          type: "integer"
          required: false
        - name: "pageSize"
          in: "query"
          description: "每页数目"
          type: "integer"
          required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/SimpleCouponActivity" 
      
  /couponactivities/{id}/spus:
    get:
      tags:
        - "coupon"
      summary: "查看优惠活动中的商品"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "活动ID"
        - name: "page"
          in: "query"
          description: "页码"
          type: "integer"
          required: false
        - name: "pageSize"
          in: "query"
          description: "每页数目"
          type: "integer"
          required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  type: "object"
                  properties:
                    name:
                      type: "string"
                    id:
                      type: "integer"
                      format: "int64"

  /shops/{shopId}/couponactivities/{id}:
    get:
      tags:
        - "coupon"
      summary: "查看优惠活动详情"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "商店ID"
        - name: "id"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "活动ID"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/CouponActivity" 
                
    put:
      tags:
        - "coupon"
      summary: "管理员修改己方某优惠活动"
      description: '`管理员`可修改己方某优惠活动的属性，不含限定范围增删与下线'
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "商店ID"
        - name: "id"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "活动ID"
        - name: "body"
          in: "body"
          description: "可修改的优惠活动信息"
          required: true
          schema:
            properties:
              name:
                type: "string"
                description: "优惠活动名称"
              quantity:
                type: "integer"
                format: "int32"
                description: "优惠券数目，0-不用优惠券"
              beginTime:
                type: "string"
                description: "活动开始时间"
              end_time:
                type: "string"
                description: "活动结束时间"
              strategy:
                type: "string"
                description: "优惠规则"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "904":
          description: "优惠活动状态禁止"

    delete:
      tags:
        - "coupon"
      summary: "管理员下线己方某优惠活动"
      description: '`管理员`可下线己方的某优惠活动, 需要将已发行未用的优惠卷一并下线'
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "商店ID"
        - name: "id"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "活动ID"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
      
    
  /shops/{shopId}/couponactivities/{id}/spus:
    post:
      tags:
        - "coupon"
      summary: "管理员为己方某优惠券活动新增限定范围"
      description: '`管理员`可为己方某优惠券活动新增某限定范围'
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "商店ID"
        - name: "id"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "活动ID"
        - name: "body"
          in: "body"
          description: "可修改的优惠券活动信息"
          required: true
          schema:
            properties:
              id:
                type: "integer"
                format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/CouponSpu"

  /shops/{shopId}/couponspus/{id}:
    delete:
      tags:
        - "coupon"
      summary: "店家删除己方某优惠券活动的某限定范围"
      description: '`商店管理员`可删除己方`待上线`的某优惠券活动对应的限定范围'
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "商店ID"
        - name: "id"
          in: "path"
          type: "integer"
          format: "int64"
          required: true
          description: "CouponSpu的id"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
  
  /coupons:
    get:
      tags:
        - "coupon"
      summary: "买家查看优惠券列表"
      description: "`买家`查看自己的优惠券列表并获取简要信息"
      operationId: "showCoupons"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "state"
          in: "query"
          required: false
          type: "integer"
        - name: "page"
          in: "query"
          description: "页码"
          type: "integer"
          required: false
        - name: "pageSize"
          in: "query"
          description: "每页数目"
          type: "integer"
          required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/SimpleCoupon"

  /coupons/{id}:
    put:
      tags:
        - "coupon"
      summary: "买家使用自己某优惠券"
      description: "`买家`仅能在优惠有效期内使用自己的优惠，即`未使用`的优惠券"
      operationId: "useCoupon"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          description: "优惠卷ID"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "905":
          description: "优惠卷状态禁止"
    delete:
      tags:
        - "coupon"
      summary: "买家删除自己某优惠券"
      description: '逻辑删除'
      operationId: "deleteCoupon"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          description: "优惠卷ID"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  /couponactivities/{id}/usercoupons:
    post:
      tags:
        - "coupon"
      summary: "买家领取活动优惠券"
      description: |-
        - 判断优惠活动的quantityType为0，且用户无此优惠卷，生成优惠卷的数目为quantity
        - 判断优惠活动的quantityType为1，且用户无此优惠卷，去从优惠卷中领一张优惠卷
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          description: "活动ID"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Coupon"
        "909":
          description: "未到优惠卷领取时间"        
        "910":
          description: "优惠卷领罄"
        "911":
          description: "优惠卷活动终止"

  /couponactivities/{id}/coupons:
    post:
      tags:
        - "coupon"
      summary: "系统产生总数控制的优惠券"
      description: "其中910错误表示该优惠卷已经产生了足够的数目"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          description: "活动ID"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Coupon"
        "909":
          description: "未到优惠卷领取时间"        
        "910":
          description: "优惠卷领罄"
        "911":
          description: "优惠卷活动终止"
          
  /shops/{shopId}/coupons/{id}:
    put:
      tags:
        - "coupon"
      summary: "优惠券退回"
      description: "系统退款后退回用户的优惠券"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          description: "店铺ID"
          required: true
          type: "integer"
          format: "int64"          
        - name: "id"
          in: "path"
          description: "优惠卷ID"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

   #预售        
  /presales/states:
    get:
      tags:
      - "presale"
      summary: "获得预售活动的所有状态"
      description: ""
      operationId: "getpresaleState"
      produces:
        - "application/json"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"
 
  /presales:
    get:
      tags:
      - "presale"
      summary: "查询所有有效的预售活动"    
      description: ""
      operationId: "queryPresale"
      produces:
      - "application/json"
      parameters:
        - in: "query"
          name: "shopId"
          required: false
          description: "根据商铺id查询"
          type: "integer"
        - name: "timeline"
          in: "query"
          required: false
          description: "时间：0 还未开始的， 1 明天开始的，2 正在进行中的，3 已经结束的"
          type: "integer"
        - in: "query"
          name: "spuId"
          description: "根据SPUid查询"
          type: "integer"
        - name: "page"
          in: "query"
          description: "页码"
          type: "integer"
          required: false
        - name: "pageSize"
          in: "query"
          description: "每页数目"
          type: "integer"
          required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/PresaleActivity"
          
  /shops/{shopId}/spus/{id}/presales:
    get:
      tags:
      - "presale"
      summary: "管理员查询SPU所有预售活动(包括下线的)"    
      description: ""
      operationId: "queryPresaleofSPU"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "shopId"
        required: true
        description: "商铺id"
        type: "integer"        
      - in: "path"
        name: "id"
        required: true
        description: "商品SPUid"
        type: "integer"
      - name: "state"
        in: "query"
        required: false
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/PresaleActivity"

    post:
      tags:
      - "presale"
      summary: "管理员新增SPU预售活动"    
      description: ""
      operationId: "createPresaleofSPU"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "shopId"
        required: true
        description: "商铺id"
        type: "integer"
      - in: "path"
        name: "id"
        required: true
        description: "商品SPUid"
        type: "integer"
      - name: "body"
        in: "body"
        description: "可修改的预售活动信息"
        required: true
        schema:
          properties:
            name:
              type: "string"
            advancePayPrice:
              type: "integer"
            restPayPrice:
              type: "integer"
            quantity:
              type: "integer"
            beginTime:
              type: "string"
            payTime:
              type: "string"
            endTime:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/PresaleActivity"
          
  /shops/{shopId}/presales/{id}:
    put:
      tags:
      - "presale"
      summary: "管理员修改SPU预售活动"    
      description: ""
      operationId: "changePresaleofSPU"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "shopId"
        required: true
        description: "商铺id"
        type: "integer"
      - in: "path"
        name: "id"
        required: true
        description: "预售活动id"
        type: "integer"
      - name: "body"
        in: "body"
        description: "可修改的预售活动信息"
        required: true
        schema:
          properties:
            name:
              type: "string"
            advancePayPrice:
              type: "integer"
            restPayPrice:
              type: "integer"
            quantity:
              type: "integer"
            beginTime:
              type: "string"
            payTime:
              type: "string"
            endTime:
              type: "string"

      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "906":
          description: "预售活动状态禁止"

    delete:
      tags:
      - "presale"
      summary: "管理员逻辑删除SPU预售活动"    
      description: "`商店管理员`可逻辑删除预售活动"
      operationId: "offlinePresaleofSPU"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "shopId"
        required: true
        description: "商铺id"
        type: "integer"
      - in: "path"
        name: "id"
        required: true
        description: "预售活动id"
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "906":
          description: "预售活动状态禁止"
          
   #团购 
  /groupons/states:
    get:
      tags:
      - "groupon"
      summary: "获得团购活动的所有状态"
      description: ""
      operationId: "getgrouponState"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"        
  /groupons:
    get:
      tags:
      - "groupon"
      summary: "查询所有团购活动"    
      description: ""
      operationId: "queryGroupons"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "timeline"
        in: "query"
        type: "integer"
        required: false
        description: "时间：0 还未开始的， 1 明天开始的，2 正在进行中的，3 已经结束的"
      - name: "spu_id"
        in: "query"
        description: "根据spu_id查询"
        type: "integer"
      - name: "shopId"
        in: "query"
        description: "根据shop id查询"
        type: "integer"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/SimpleGrouponActivity"

  /shops/{id}/groupons:
    get:
      tags:
      - "groupon"
      summary: "管理员查询所有团购(包括下线的)"    
      description: ""
      operationId: "queryGroupon"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "id"
        required: true
        description: "根据商铺id查询"
        type: "integer"
      - name: "state"
        in: "query"
        required: false
        type: "integer"
      - in: "query"
        name: "spuid"
        description: "根据SPUid查询"
        type: "integer"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/SimpleGrouponActivity"

  /shops/{shopId}/spus/{id}/groupons:
    get:
      tags:
      - "groupon"
      summary: "管理员查询某SPU所有团购活动"    
      description: ""
      operationId: "queryGrouponofSPU"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "shopId"
        required: true
        description: "商铺id"
        type: "integer"
      - in: "path"
        name: "id"
        required: true
        description: "商品SPUid"
        type: "integer"
      - name: "state"
        in: "query"
        required: false
        type: "integer"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/SimpleGrouponActivity"
                  
    post:
      tags:
      - "groupon"
      summary: "管理员对SPU新增团购活动"    
      description: ""
      operationId: "createGrouponofSPU"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "shopId"
        required: true
        description: "商铺id"
        type: "integer"
      - in: "path"
        name: "id"
        required: true
        description: "商品SPUid"
        type: "integer"
      - name: "body"
        in: "body"
        description: "可修改的团购活动信息"
        required: true
        schema:
          properties:
            strategy:
              type: "string"
            beginTime:
              type: "string"
            endTime:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/GrouponActivity"

  /shops/{shopId}/groupons/{id}:
    put:
      tags:
      - "groupon"
      summary: "管理员修改SPU团购活动"    
      description: ""
      operationId: "changeGrouponofSPU"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "shopId"
        required: true
        description: "商铺id"
        type: "integer"
      - in: "path"
        name: "id"
        required: true
        description: "团购活动id"
        type: "integer"
      - name: "body"
        in: "body"
        description: "可修改的团购活动信息"
        required: true
        schema:
          properties:
            strategy:
              type: "string"
            begintime:
              type: "string"
            endtime:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "907":
          description: "团购活动状态禁止"

    delete:
      tags:
      - "groupon"
      summary: "管理员下架SKU团购活动"    
      operationId: "cancelGrouponofSPU"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "shopId"
        required: true
        description: "根据商铺id查询"
        type: "integer"
      - in: "path"
        name: "id"
        required: true
        description: "团购活动id"
        type: "integer"

      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "907":
          description: "团购活动状态禁止"
          
   # shop
  /shops/states:
    get:
      tags:
      - "shop"
      summary: "获得店铺的所有状态"
      description: ""
      operationId: "getshopState"
      produces:
      - "application/json"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"
  /shops:
    post:
      tags:
      - "shop"
      summary: "店家申请店铺"
      operationId: "addShop"
      produces: 
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        required: true
        schema:
          properties:
            name:
              type: "string"
                
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Shop"
        "908":
          description: "用户已经有店铺"


  /shops/{id}:
    put:
      tags:
      - "shop"
      summary: "店家修改店铺信息"
      description: ""
      operationId: "modifyShop"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          description: "shop ID"
          required: true
          type: "integer"
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              name:
                type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

    delete:
      tags:
      - "shop"
      summary: "管理员或店家关闭店铺"
      description: "如果店铺从未上线则物理删除"
      operationId: "deleteShop"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:  
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          description: "shop ID"
          required: true
          type: "integer"
  
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
                
  /shops/{shopId}/newshops/{id}/audit:
    put:
      tags:
      - "shop"
      summary: "平台管理员审核店铺信息"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "shopId"
          in: "path"
          description: "shop ID"
          required: true
          type: "integer"
        - name: "id"
          in: "path"
          description: "新店 ID"
          required: true
          type: "integer"  
        - name: "body"
          in: "body"
          required: true
          schema:
            properties:
              conclusion:
                type: "boolean"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"      
  
  /shops/{id}/onshelves:
    put:
      tags:
      - "shop"
      summary: "管理员上线店铺"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"

        - name: "id"
          in: "path"
          description: "店 ID"
          required: true
          type: "integer"  

      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"                    

  /shops/{id}/offshelves:
    put:
      tags:
      - "shop"
      summary: "管理员下线店铺"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description: "用户token"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          description: "店 ID"
          required: true
          type: "integer"  

      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"   

  /addresses:
    post:
      tags:
      - "address"
      summary: "买家新增地址"    
      description: "限制每个买家最多有20个地址"
      operationId: "addAddress"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "地址信息"
        required: true
        schema:
          properties:
            regionId:
              type: "integer"
            detail:
              type: "string"
            consignee:
              type: "string"
            mobile:
              type: "string"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                 $ref: "#/definitions/Address"
        "601":
          description: "达到地址簿上限"
    get:
      tags:
      - "address"
      summary: "买家查询所有已有的地址信息"
      description: ""
      operationId: "queryAddress"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: true
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: true
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:  
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        id:
                          type: "integer"
                        region_id:
                          type: "integer"
                        detail:
                          type: "string"
                        consignee:
                          type: "string"
                        mobile:
                          type: "string"
                        default:
                          type: "boolean"
                        gmtCreateTime:
                          type: "string"
                        state:
                          type: "integer"
                          description: "0 有效， 1 废弃"
                      
  /addresses/{id}/default:
    put:
      tags:
      - "address"
      summary: "买家设置默认地址"    
      description: "需将原有的默认地址改为普通地址"
      operationId: "setDefaultAddress"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - in: "path"
        name: "id"
        description: "地址ID"
        type: "integer"
        required: true
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
  

  /addresses/{id}:
    put:
      tags:
      - "address"
      summary: "买家修改自己的地址信息"
      description: ""
      operationId: "changeAddressInfo"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "地址id"
        type: "integer"
        required: true
      - name: "body"
        in: "body"
        description: "可修改的地址信息"
        required: true
        schema:
          properties:
            regionId:
              type: "integer"
            detail:
              type: "string"
            consignee:
              type: "string"
            mobile:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
  
    delete:
      tags:
      - "address"
      summary: "买家删除地址"
      description: "删除自己的地址"
      operationId: "delAddress"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "地址id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
  
  /region/{id}/ancestor:
    get:
      tags:
      - "address"
      summary: "查询某个地区的所有上级地区"
      description: "返回其所有父级地址"
      operationId: "getParentRegion"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "该地区id"
        type: "integer"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items: 
                  $ref: "#/definitions/Region"
                  
  /regions/{id}/subregions:
    post:
      tags:
      - "address"
      summary: "管理员在地区下新增子地区"
      description: ""
      operationId: "addRegion"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "地区id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "地区信息"
        required: true
        schema:
          properties:
            name:
              type: "string"
            postalCode:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "602":
          description: "地区已废弃"
          
  /regions/{id}:      
    put:
      tags:
      - "address"
      summary: "管理员修改某个地区"
      description: ""
      operationId: "modifyRegion"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "地区id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "地区信息"
        required: true
        schema:
          properties:
            name:
              type: "string"
            postalCode:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

    delete:
      tags:
      - "address"
      summary: "管理员让某个地区无效"
      description: ""
      operationId: "modifyRegionEffection"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "地区id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
  
  #用户模块
  /users/states:
    get:
      tags:
      - "user"
      summary: "获得买家的所有状态"
      description: ""
      operationId: "getUserState"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"
  
  /users:
    post:
      tags:
      - "user"
      summary: "注册用户"    
      description: "无需登录"
      operationId: "registerUser"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "可填写的用户信息"
        required: true
        schema:
          properties:
            mobile:
              type: "string"
            email:
              type: "string"
            userName:
              type: "string"
            password:
              type: "string"
            realName:
              type: "string"
            gender:
              type: "integer"
            birthday:
              type: "string"
              format: "YYYY-MM-DD"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/User"
        "733":
          description: "电话已被注册"
        "732":
          description: "邮箱已被注册"
        "731":
          description: "用户名已被注册"
    get:
      tags:
      - "user"
      summary: "买家查看自己信息"
      description: ""
      operationId: "getSelfInfo"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/User"
    put:
      tags:
      - "user"
      summary: "买家修改自己的信息"
      description: ""
      operationId: "changeMyselfInfo"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "body"
        in: "body"
        description: "可修改的用户信息"
        required: true
        schema:
          properties:
            realName:
              type: "string"
            gender:
              type: "string"
            birthday:
              type: "string"
              format: "YYYY-MM-DD"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"


  /users/all:          
    get:
      tags:
      - "user"
      summary: "平台管理员获取所有用户列表"    
      description: ""
      operationId: "getAllUsers"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "userName"
        in: "query"
        description: "用户名"
        type: "string"
        required: false
      - name: "email"
        in: "query"
        description: "邮箱"
        type: "string"
        required: false
      - name: "mobile"
        in: "query"
        description: "电话号码"
        type: "string"
        required: false
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:  
                    type: "array"
                    items:
                      $ref: "#/definitions/SimpleUser"


  /users/password:
    put:
      tags:
      - "user"
      summary: "用户修改密码"
      description: ""
      operationId: "changePassword"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "body"
        in: "body"
        description: "新旧密码"
        required: true
        schema:
          properties:
            captcha:
              type: "string"
            oldPassword:
              type: "string"
            newPassword:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "741":
          description: "不能与旧密码相同"
        "700":
          description: "用户名不存在或者密码错误"
          
  /users/password/reset:
    put:
      tags:
      - "user"
      summary: "用户重置密码"
      description: "向用户邮箱发送随机密码"
      operationId: "resetPassword"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        in: "header"
        description: "用户token"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "邮箱和电话"
        required: true
        schema:
          properties:
            mobile:
              type: "string"
            email:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "745":
          description: "与系统预留的邮箱不一致"
        "746":
          description: "与系统预留的电话不一致"
          
  /users/login:
    post:
      tags:
      - "user"
      summary: "用户名密码登录"
      description: "其中740错误是因为重置密码后，密码不符合规定造成的。前端应该让用户修改密码。"
      operationId: "login"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "用户名和密码"
        required: true
        schema:
          properties:
            userName:
              type: "string"
            password:
              type: "string"
      responses:
        "default":
          description: "成功登录,返回用户的token"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "string"
                example: "{token}"
        "702":
          description: "用户被禁止登录"
        "700":
          description: "用户名不存在或者密码错误"

  /users/logout:
    get:
      tags:
      - "user"
      summary: "用户登出"
      description: ""
      operationId: "logout"
      produces:
      - "application/json"
      parameters: 
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  /users/{id}:
    get:
      tags:
      - "user"
      summary: "管理员查看任意买家信息"
      description: ""
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        in: "header"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                $ref: "#/definitions/User"       

  /users/{id}/ban:
    put:
      tags:
      - "user"
      summary: "平台管理员封禁买家"
      description: ""
      operationId: "banUser"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
  /users/{id}/release:
    put:
      tags:
      - "user"
      summary: "平台管理员解禁买家"
      description: ""
      operationId: "releaseUser"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
  #购物车  
  /carts:
    get:
      tags:
      - "cart"
      summary: "买家获得购物车列表"
      description: ""
      operationId: "queryCarts"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:  
                    type: "array"
                    items:
                      properties:
                        id:
                          type: "integer"
                        goodSkuId:
                          type: "string"
                        skuName:
                          type: "integer"
                          description: "规格名称"
                        spuName:
                          type: "integer"
                          description: "商品名称"
                        quantity:
                          type: "string"
                        addTime:
                          type: "string"
                        price:
                          type: "integer"
                          description: "商品被加入购物车时的价格"
                        couponActivity:
                          type: "array"
                          description: "适用的优惠活动"
                          items:
                            properties:
                              id:
                                type: "integer"
                              name:
                                type: "string"
                              beginTime:
                                type: "string"
                              endTime:
                                type: "string"
    
    post:
      tags:
      - "cart"
      summary: "买家将商品加入购物车"    
      description: ""
      operationId: "addToCart"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "可填写的信息"
        required: true
        schema:
          properties:
            goodSkuID:
              type: "integer"
            quantity:
              type: "integer"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Cart"
    delete:
      tags:
      - "cart"
      summary: "买家清空购物车"
      description: ""
      operationId: "clearGoods"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  /carts/{id}:
    put:
      tags:
      - "cart"
      summary: "买家修改购物车单个商品的数量或规格"
      description: ""
      operationId: "changeCartInfo"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "购物车ID"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "修改购物车单个商品信息"
        required: true
        schema:
          properties:
            goodSkuID:
              type: "integer"
            quantity:
              type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

    delete:
      tags:
      - "cart"
      summary: "买家删除购物车中商品"
      description: "删除任意商品"
      operationId: "delGoods"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "购物车ID"
        required: true
        type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  #足迹
  /footprints:
    get:
      tags:
      - "footprint"
      summary: "管理员查看浏览记录"    
      description: ""
      operationId: "getSelfFootPrint"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "userId"
        in: "query"
        description: "用户id"
        type: "integer"
        required: false
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:  
                    type: "array"
                    items:
                      $ref: "#/definitions/FootPrint"

  /users/{id}/footprints:
    post:
      tags:
      - "footprint"
      summary: "增加足迹"    
      description: "平台内部调用"
      operationId: "addFootPrint"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "可填写的信息"
        required: true
        schema:
          properties:
            goodSkuID:
              type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  #时段
  /advertisement/timesegments:
    post:
      tags:
      - "time"
      summary: "平台管理员新增广告时间段"    
      description: ""
      operationId: "generateNewAdvertisementTime"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "起止时间"
        required: true
        schema:
          properties:
            beginTime: 
              type: "string"
            endTime: 
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/TimeSegment"
        "604":
          description: "时段冲突"
    get:
      tags:
      - "time"
      summary: "管理员获取广告时间段列表"    
      description: ""
      operationId: "getAllAdvertisementTime"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/TimeSegment"
          
  /flashsale/timesegments:
    post:
      tags:
      - "time"
      summary: "平台管理员新增秒杀时间段"    
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "起止时间"
        required: true
        schema:
          properties:
            beginTime: 
              type: "string"
            endTime: 
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/TimeSegment"
        "604":
          description: "时段冲突"
    get:
      tags:
      - "time"
      summary: "管理员获取秒杀时间段列表"    
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                              
                    type: "array"
                    items:
                      $ref: "#/definitions/TimeSegment"
          
  /advertisement/timesegments/{id}:
    delete:
      tags:
        - "time"
      summary: "平台管理员删除广告时间段"    
      description: ""
      produces:
        - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "时段id"
        required: true
        type: "integer"  
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"  

  /flashsale/timesegments/{id}:
    delete:
      tags:
        - "time"
      summary: "平台管理员删除秒杀时间段"    
      description: ""
      produces:
        - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "时段id"
        required: true
        type: "integer"  
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"  

  #广告
  /advertisement/states:
    get:
      tags:
      - "advertise"
      summary: "获得广告的所有状态"
      description: ""
      operationId: "getadvertisementstate"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"
  
  /advertisement/{id}/default:
    put:
      tags:
      - "advertise"
      summary: "管理员设置默认广告"    
      description: "将一个广告设置为默认广告"
      operationId: "setDefaultAdvertisement"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "广告id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  /advertisement/{id}:
    put:
      tags:
      - "advertise"
      summary: "管理员修改广告内容"    
      description: ""
      operationId: "changeAdvertisementInfo"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "广告id"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "可修改的广告信息"
        required: true
        schema:
          properties:
            content:
              type: "string"
            seg_id:
              type: "string"
            weight:
              type: "string"
            link:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
    delete:
      tags:
      - "advertise"
      summary: "管理员删除某一个广告"    
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "广告id"
        type: "string"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "608":
          description: "广告状态禁止"
            

  /advertisement/current:
    get:
      tags:
      - "advertise"
      summary: "获取当前时段广告列表"    
      description: "无需登录"
      operationId: "getCurrentAdvertisement"
      produces:
      - "application/json"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Advertisement"

  /advertisement/{id}/uploadImg:
    post:
      tags:
      - "advertise"
      summary: "管理员上传广告图片"    
      description: "如果该广告有图片，需修改该广告的图片，并删除图片文件"
      operationId: "uploadAdvImg"
      consumes: 
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "广告id"
        required: true
        type: "integer"
      - in: "formData"
        name: "img"
        type: "file"
        description: "文件"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "506":
          description: "目录文件夹眉头写入权限"
      
    
  /advertisement/{id}/onshelves:
    put:
      tags:
      - "advertise"
      summary: "管理员上架广告"    
      description: ""
      operationId: "onShelvesAdvertisement"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "广告id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "608":
          description: "广告状态禁止"

  /advertisement/{id}/offshelves:
    put:
      tags:
      - "advertise"
      summary: "管理员下架广告"    
      description: ""
      operationId: "offShelvesAdvertisement"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "广告id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "608":
          description: "广告状态禁止"
  
  /advertisement/{id}/audit:
    put:
      tags:
      - "advertise"
      summary: "管理员审核广告"    
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "广告id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "可填写的广告信息"
        required: true
        schema:
          properties:
            conclusion:
              type: "boolean"
              description: "审核结果"
            message:
              type: "string"
              description: "审核结果"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "608":
          description: "广告状态禁止"        

  /timesegments/{id}/advertisement:
    get:
      tags:
      - "advertise"
      summary: "管理员查看某一个广告时间段的广告"    
      description: "查询时可以选择按照时间段来查看,当id=0时为未定义时段的广告"
      operationId: "getOneAdvertisementTime"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "广告时间段id"
        type: "string"
        required: true
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:  
                    type: "array"
                    items:
                      $ref: "#/definitions/Advertisement"
    post:
      tags:
      - "advertise"
      summary: "管理员在广告时段下新建广告"    
      description: ""
      operationId: "createAdvertisement"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "广告时间段id"
        type: "string"
        required: true
      - name: "body"
        in: "body"
        description: "可填写的广告信息"
        required: true
        schema:
          properties:
            content:
              type: "string"
            weight:
              type: "integer"
            link:
              type: "string"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Advertisement"
        "603":
          description: "达到时段广告上限"
  
  /timesegments/{tid}/advertisement/{id}:
    post:
      tags:
      - "advertise"
      summary: "管理员在广告时段下增加广告"    
      description: "若广告有时段则覆盖原时段"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "tid"
        in: "path"
        description: "广告时间段id"
        type: "string"
        required: true
      - name: "id"
        in: "path"
        description: "广告id"
        type: "string"
        required: true
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Advertisement"
        "603":
          description: "达到时段广告上限"


  #分享        
  /shares:
    post:
      tags:
      - "share"
      summary: "分享者生成分享链接"    
      description: "根据买家id和商品id生成唯一的分享链接"
      operationId: "generateShareResult"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "生成分享链接所需的商品spuId和分享者id"
        required: true
        schema:
          properties:
            shareId:
              type: "integer"
              description: "分享者id（生成链接时加密）"
            goodsSpuId:
              type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                  type: "object"
                  properties:
                    id:
                      type: "string"
                    shareId:
                      type: "string"
                    goodsSpuId:
                      type: "string"
                    quantity:
                      type: "integer"
                      description: "成功返点的商品件数"
                    gmtCreateTime:
                      type: "integer"
                    shareLink:
                      type: "string"
                      description: "分享链接"

    get:
      tags:
      - "share"
      summary: "买家查询所有分享记录"    
      description: "买家查询所有分享记录"
      operationId: "getShares"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "goodsSpuId"
        in: "query"
        description: "SPU Id"
        type: "integer"
        required: false
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                
                    type: "array"
                    items: 
                      $ref: "#/definitions/Share"
                  
  /shops/{id}/shares:
    get:
      tags:
      - "share"
      summary: "管理员查询商品分享记录"    
      description: "商铺管理员只能查询本店商铺的商品"
      operationId: "getSharesOfGoods"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "店铺Id"
        type: "integer"
        required: true
      - name: "spuId"
        in: "query"
        description: "SPU Id"
        type: "integer"
        required: false
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                
                    type: "array"
                    items: 
                      $ref: "#/definitions/Share"

  /goods/{spuId}/beshared:
    post:
      tags:
      - "share"
      summary: "生成分享成功状态信息"    
      description: "记录用户打开分享链接"
      operationId: "createBeSharedInfo"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "spuId"
        in: "path"
        description: "SPU Id"
        type: "integer"
        required: true
      - name: "body"
        in: "body"
        description: "被分享者id"
        required: true
        schema:
          properties:
            shareId:
              type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/BeShared"
                
  /beshared:              
    get:
      tags:
      - "share"
      summary: "买家查询所有分享成功记录"    
      description: "买家查询所有分享成功记录"
      operationId: "getBeShared"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "spuId"
        in: "query"
        description: "SPU Id"
        type: "integer"
        required: false
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                
                    type: "array"
                    items:
                      $ref: "#/definitions/BeShared"
                  
  /shops/{id}/beshared:              
    get:
      tags:
      - "share"
      summary: "管理员查询所有分享成功记录"    
      description: "管理查询所有分享成功记录"
      operationId: "getAllBeShared"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "店铺Id"
        type: "integer"
        required: true
      - name: "spuId"
        in: "query"
        description: "SPU Id"
        type: "integer"
        required: false
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                
                    type: "array"
                    items:
                      $ref: "#/definitions/BeShared"
  
  /shops/{shopId}/orderitems/{id}/beshared:              
    put:
      tags:
      - "share"
      summary: "管理员设定分享返点"    
      description: "系统内部调用，或者平台管理员"
      operationId: "setSuccessBeShared"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        description: "店铺Id"
        type: "integer"
        required: true
      - name: "id"
        in: "path"
        description: "订单明细Id"
        type: "integer"
        required: true
      - name: "body"
        in: "body"
        description: "订单信息"
        required: true
        schema:
          properties:
            userId:
              type: "integer"
              description: "下单顾客id"
            quantity: 
              type: "integer"
              description: "数量"
            subtotal: 
              type: "integer"
              description: "优惠后的单价"
            skuId:
              description: "sku id"
              type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "integer"
                description: "beSharedId"
        "606":
          description: "订单明细无分享记录"    

  /shops/{shopId}/goods/{spuId}/shareactivities:
    post:
      tags:
      - "share"
      summary: "平台或店家创建新的分享活动"    
      description: "两个管理员的身份用shop_id区分，0表示平台"
      operationId: "createShareActivity"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        description: "店铺Id"
        type: "integer"
        required: true        
      - name: "spuId"
        in: "path"
        description: "SPU Id"
        type: "integer"
        required: true        
      - name: "body"
        in: "body"
        description: "商品id和活动的起止时间与活动规则"
        required: true
        schema:
          properties:
            beginTime: 
              type: "string"
              format: "YYYY-MM-DD"
            endTime: 
              type: "string"
              format: "YYYY-MM-DD"
            strategy:
              description: "活动规则（JSON格式）"
              type: "string"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/ShareActivity"

  /shareactivities:                
    get:
      tags:
      - "share"
      summary: "查看特定商品分享活动（所有用户均可）"    
      description: "根据商品id分享活动"
      operationId: "getShareActivity"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "query"
        description: "店铺Id"
        type: "integer"
        required: false        
      - name: "spuId"
        in: "query"
        description: "SPU Id"
        type: "integer"
        required: false        
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: false
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: false
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                
                    type: "array"
                    items:
                      $ref: "#/definitions/ShareActivity"
        
  /shops/{shopId}/goods/{spuId}/shareactivities/{id}:
    put:
      tags:
      - "share"
      summary: "管理员修改平台分享活动的内容"    
      description: ""
      operationId: "changeShareActivity"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
      - name: "spuId"
        in: "path"
        description: "商品SPU id"
        required: true
        type: "integer"
      - name: "id"
        in: "path"
        description: "分享活动id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "可修改的分享活动信息"
        required: true
        schema:
          properties:
            startTime: 
              type: "string"
              format: "YYYY-MM-DD"
            endTime: 
              type: "string"
              format: "YYYY-MM-DD"
            strategy:
              description: "推广提成规则"
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "605":
          description: "分享活动时段冲突"
        
    delete:
      tags:
      - "share"
      summary: "管理员终止指定商品的分享活动"    
      description: ""
      operationId: "deleteShareActivity"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "shopId"
        in: "path"
        description: "店铺id"
        required: true
        type: "integer"
      - name: "spuId"
        in: "path"
        description: "商品SPU id"
        required: true
        type: "integer"
      - name: "id"
        in: "path"
        description: "分享活动id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  #售后
  /aftersales/states:
    get:
      tags:
      - "aftersale"
      summary: "获得售后单的所有状态"
      description: ""
      operationId: "getAftersaleState"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"
  
  /orderItems/{id}/aftersales:
    post:
      tags:
      - "aftersale"
      summary: "买家提交售后单"
      description: ''
      operationId: "Createaftersale"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "authorization"
          description:  "用户token"
          required: true
          type: "string"
        - name: "id"
          in: "path"
          description: "订单明细id"
          required: true
          type: "integer"
        - name: "body"
          in: "body"
          description: "售后服务信息"
          required: true
          schema:
            properties:
              type: 
                type: "integer"
              quantity:
                type: "integer"
              reason:
                type: "string"
              regionId:
                type: "integer"
              detail:
                type: "string"
              consignee:
                type: "string"
              mobile:
                type: "string"
      responses:
        "default":
         description: "成功"
         schema:
           type: "object"
           properties:
              errno:
                type: "integer"
                example: 0
              errmsg:
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Aftersale"
  
  /aftersales:
    get:
      tags:
      - "aftersale"
      summary: "买家查询所有的售后单信息（可根据售后类型和状态选择）"
      description: "默认所有，选择按类型或者状态（买家通过这个API只能查询到自己的售后单）"
      operationId: "queryAllReturnOrder"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        in: "header"
        type: "string"
        description: "用户token"
        required: true
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
      - name: "type"
        in: "query"
        description: "售后类型"
        type: "string"
      - name: "state"
        in: "query"
        description: "售后状态"
        type: "integer"
      responses:
        "default":
         description: ""
         schema:
           type: "object"
           properties:
              errno:
                type: "integer"
                example: 0
              errmsg:
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/Aftersale"

  /shops/{id}/aftersales:
    get:
      tags:
      - "aftersale"
      summary: "管理员查看所有售后单（可根据售后类型和状态选择）"
      description: "管理员可通过售后单ID查看所有售后单"
      operationId: "GetAllAfterSales"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        in: "header"
        type: "string"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "店铺id"
        type: "integer"
        required: true
      - name: "spuId"
        in: "query"
        description: "SPU Id"
        type: "integer"
      - name: "skuId"
        in: "query"
        description: "SKU Id"
        type: "integer"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
      - name: "type"
        in: "query"
        description: "售后类型"
        type: "integer"
      - name: "state"
        in: "query"
        description: "售后状态"
        type: "integer"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:  
                    type: "array"
                    items:
                      $ref: "#/definitions/SimpleAftersale"


  /aftersales/{id}:
    get:
      tags:
      - "aftersale"
      summary: "买家根据售后单id查询售后单信息"
      description: "买家通过这个API只能查询到自己的售后单"
      operationId: "getOneAllAftersaleOrder"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        in: "header"
        type: "string"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        type: "string"
        description: "售后单id"
        required: true
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "object"
              errmsg: 
                type: "string"
              data:
                $ref: "#/definitions/Aftersale"
    put:
      tags:
      - "aftersale"
      summary:  "买家修改售后单信息（店家生成售后单前）"
      description: "在店家生成售后单之前买家可以修改信息，生成之后买家只能进行删除操作"
      operationId: "changeaftersale"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        type: "string"
        description: "售后单id"
        required: true
      - name: "body"
        in: "body"
        description: "买家可修改的信息：地址，售后商品的数量，申请售后的原因，联系人以及联系电话"
        required: true
        schema:
          properties:
            quantity:
              type: "integer"
            reason:
              type: "string"
            regionId:
              type: "integer"
            detail:
              type: "string"
            consignee:
              type: "string"
            mobile:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

    delete:
      tags:
      - "aftersale"
      summary: "买家取消售后单和逻辑删除售后单"
      description: "售后单完成之前，买家取消售后单；售后单完成之后，买家逻辑删除售后单"
      operationId: "deleteAftersales"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        type: "integer"
        description: "售后单id"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg:
                type: "string"
                example: "成功"

  /aftersales/{id}/sendback:
    put:
      tags:
      - "aftersale"
      summary: "买家填写售后的运单信息"
      description: "修改售后单状态"
      operationId: "sendbackAftersale"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        type: "integer"
        description: "售后单id"
        required: true
      - name: "body"
        in: "body"
        description: "运单号"
        required: true
        schema:
          properties:
            logSn:
              type: "string"  
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  /aftersales/{id}/confirm:
    put:
      tags:
      - "aftersale"
      summary: "买家确认售后单结束"
      description: "修改售后单状态"
      operationId: "confirmAftersale"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        type: "integer"
        description: "售后单id"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  /shops/{shopId}/aftersales/{id}:
    get:
      tags:
      - "aftersale"
      summary: "买家根据售后单id查询售后单信息"
      description: "买家通过这个API只能查询到自己的售后单"
      operationId: "getAftersaleOrderByIdAdmin"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        in: "header"
        type: "string"
        description: "用户token"
        required: true
      - name: "shopId"
        in: "path"
        type: "integer"
        description: "店铺id"
        required: true
      - name: "id"
        in: "path"
        type: "integer"
        description: "售后单id"
        required: true
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "object"
              errmsg: 
                type: "string"
              data:
                $ref: "#/definitions/Aftersale"              
                
  /shops/{shopId}/aftersales/{id}/confirm:
    put:
      tags:
      - "aftersale"
      summary:  "管理员同意/不同意（退款，换货，维修）"
      description: ""
      operationId: "confirmAftersales"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "shopId"
        in: "path"
        type: "integer"
        description: "店铺id"
        required: true
      - name: "id"
        in: "path"
        type: "integer"
        description: "售后单id"
        required: true
      - name: "body"
        in: "body"
        description: "处理意见"
        required: true
        schema:
          properties:
            confirm:
              type: "boolean"
            conclusion:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
  
  /shops/{shopId}/aftersales/{id}/receive:
    put:
      tags:
      - "aftersale"
      summary:  "店家确认收到买家的退（换）货"
      description: "如果是退款，则退款给用户，如果换货则产生一个新订单，如果是维修则等待下一个动作"
      operationId: "shopConfirmReceive"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "shopId"
        in: "path"
        type: "integer"
        description: "店铺id"
        required: true
      - name: "id"
        in: "path"
        type: "integer"
        description: "售后单id"
        required: true
      - name: "body"
        in: "body"
        description: "处理意见"
        required: true
        schema:
          properties:
            confirm:
              type: "boolean"
            conclusion:
              type: "string"  
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
                
  /shops/{shopId}/aftersales/{id}/deliver:
    put:
      tags:
      - "aftersale"
      summary:  "店家寄出维修好（调换）的货物"
      description: ""
      operationId: "deliverAferService"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "shopId"
        in: "path"
        type: "integer"
        description: "店铺id"
        required: true
      - name: "id"
        in: "path"
        type: "integer"
        description: "售后单id"
        required: true
      - name: "body"
        in: "body"
        description: "运单号"
        required: true
        schema:
          properties:
            logSn:
              type: "string"        
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  #收藏              
  /favorites:
    get: 
      tags: 
        - "favorite"
      summary: "买家查看所有收藏的商品"
      operationId: "getUserfavorite"
      produces:
        - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg:
                type: "string"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                
                    type: "array"
                    items: 
                      $ref: "#/definitions/Collection"
  
  /favorites/goods/{spuId}:
    post:
      tags:
        - "favorite"
      summary: "买家收藏商品"
      operationId: "addGood2Collection"
      produces:
        - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "spuId"
        in: "path"
        description:  "商品SpuId"
        type: "integer"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg:
                type: "string"
              data:
                $ref: "#/definitions/Collection"

  /favorites/{id}:
    delete:
      tags:
      - "favorite"
      summary: "买家删除某个收藏的商品"
      operationId: "deleteGoodInCollection"
      produces:
        - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description:  "收藏商品id"
        type: "integer"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg:
                type: "string"
                
  #权限服务
  /adminusers/states:
    get:
      tags:
      - "privilege"
      summary: "auth001: 获得管理员用户的所有状态"
      description: ""
      operationId: "getadminState"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/State"
  
  /adminusers:
    post:
      tags:
      - "privilege"
      summary: "auth001: 注册用户"    
      description: -|
        - 用户名需满足长度为6
        - 密码长度为6，且至少包含大写字母，小写字母，数字和特殊符号
      operationId: "registerAdminUser"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "可修改的用户信息"
        required: true
        schema:
          properties:
            userName:
              type: "string"
            password:
              type: "string"
            name:
              type: "string"
            avatar:
              type: "string"
            mobile:
              type: "string"
            email:
              type: "string"
            openId:
              type: "string"
            departId:
              type: "integer"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/AdminUser"
        "731":
          description: "用户名已被注册"
        "732":
          description: "邮箱已被注册"
        "733":
          description: "电话已被注册"
    get:
      tags:
      - "privilege"
      summary: "auth003:查看自己信息"
      description: ""
      operationId: "getadminSelfInfo"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                $ref: "#/definitions/AdminUser"
    put:
      tags:
      - "privilege"
      summary: "auth004:修改自己的信息"
      description: ""
      operationId: "changeMyAdminselfInfo"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "body"
        in: "body"
        description: "可修改的用户信息"
        required: true
        schema:
          properties:
            name:
              type: "string"
            avatar:
              type: "string"
            mobile:
              type: "string"
            email:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "732":
          description: "邮箱已被注册"
        "733":
          description: "电话已被注册"
          
  /adminusers/{id}/uploadImg:
    post:
      tags:
      - "privilege"
      summary: "auth005:上传用户图片"    
      description: "如果该用户有图片，需修改该用户的图片，并删除图片文件"
      operationId: "uploadAdminUserImg"
      consumes: 
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      - in: "formData"
        name: "img"
        type: "file"
        description: "文件"
        required: true
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
           

  /adminusers/all:
    get:
      tags:
      - "privilege"
      summary: "auth003: 查询用户信息"
      description: ""
      operationId: "queryAdminUser"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "userName"
        in: "query"
        description: "用户名"
        type: "string"
      - name: "mobile"
        in: "query"
        description: "电话号码"
        type: "string"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: true
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: true
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:                
                    type: "array"
                    items:
                      $ref: "#/definitions/SimpleAdminUser"
          
          
  /adminusers/password:
    put:
      tags:
      - "privilege"
      summary: "auth002:用户修改密码"
      description: |-
        - 密码长度为6，且至少包含大写字母，小写字母，数字和特殊符号
        - 验证码只能使用一次
      operationId: "changeAdminPassword"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "验证码和新密码"
        required: true
        schema:
          properties:
            captcha:
              type: "string"
              description: "验证码"
            newPassword:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "741":
          description: "不能与旧密码相同"
        "700":
          description: "用户名不存在或者密码错误"
  
  /adminusers/password/reset:
    put:
      tags:
      - "privilege"
      summary: "auth002: 用户重置密码"
      description: "向用户邮箱发送验证码，限制用户在一段时间内只能发送一次验证码"
      operationId: "resetadminPassword"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "邮箱和用户名"
        required: true
        schema:
          properties:
            userName:
              type: "string"
            email:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "745":
          description: "与系统预留的邮箱不一致"
        "746":
          description: "与系统预留的电话不一致"
  
  /adminusers/login:
    post:
      tags:
      - "privilege"
      summary: "auth006:用户名密码登录"
      description: |-
        - 需记录用户登录时间和IP
        - 需把用户的权限重新load到Redis
      operationId: "adminlogin"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "用户名和密码"
        required: true
        schema:
          properties:
            userName:
              type: "string"
            password:
              type: "string"
      responses:
        "default":
          description: "成功登录,返回用户的token"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "string"
                example: "{token}"
        "702":
          description: "用户被禁止登录"
        "700":
          description: "用户名不存在或者密码错误"

  /adminusers/logout:
    get:
      tags:
      - "privilege"
      summary: "auth006: 用户登出"
      description: " 需释放Redis的权限"
      operationId: "adminlogout"
      produces:
      - "application/json"
      parameters: 
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
  
  /adminusers/{id}/privileges:
    get:
      tags:
      - "privilege"
      summary: "auth007: 获得用户的权限"
      description: "从数据库中获得"
      operationId: "getSelfPrivileges"
      produces:
      - "application/json"
      parameters: 
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"        
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"     
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Privilege"
  
  /adminusers/{id}:
    get:
      tags:
      - "privilege"
      summary: "auth003: 查看任意用户信息"
      description: ""
      operationId: "getAdminUserById"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        in: "header"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                $ref: "#/definitions/AdminUser"       
    put:
      tags:
      - "privilege"
      summary: "auth009: 修改任意用户信息"
      description: ""
      operationId: "changeUserInfo"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "可修改的用户信息"
        required: true
        schema:
          properties:
            name:
              type: "string"
            avatar:
              type: "string"
            mobile:
              type: "string"
            email:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "732":
          description: "邮箱已被注册"
        "733":
          description: "电话已被注册"
    delete:
      tags:
      - "privilege"
      summary: "auth009: 删除用户"
      description: "删除任意用户"
      operationId: "delUser"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  /adminusers/{id}/release:
    put:
      tags:
      - "privilege"
      summary: "auth009: 恢复用户"
      description: "让用户可以登录"
      operationId: "recoverUser"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  /adminusers/{id}/forbid:
    put:
      tags:
      - "privilege"
      summary: "auth009: 禁止用户登录"
      description: ""
      operationId: "forbidUser"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  /adminusers/{userid}/roles/{roleid}:
    post:
      tags:
      - "privilege"
      summary: "auth010: 赋予用户角色"    
      description: ""
      operationId: "assignRole"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "roleid"
        in: "path"
        description: "角色id"
        required: true
        type: "integer"
      - name: "userid"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/UserRole"
             
  /adminuserroles/{id}:             
    delete:
      tags:
      - "privilege"
      summary: "auth010: 取消用户角色"    
      description: ""
      operationId: "revokeRole"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "用户角色id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
                
  /users/{id}/proxy:
    post:
      tags:
      - "privilege"
      summary: "auth012: 设置用户代理关系"    
      description: "让id用户代理本用户的权限"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "代理者id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "代理信息"
        required: true
        schema:
          properties:
            beginDate:
              type: "string"
            endDate:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/ProxyUser"
        "747":
          description: "同一时间段有冲突的代理关系"
  
  /ausers/{aid}/busers/{bid}:
    post:
      tags:
      - "privilege"
      summary: "auth012: 管理员设置用户代理关系"    
      description: "让aid用户代理bid用户的权限"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "aid"
        in: "path"
        description: "代理者id"
        required: true
        type: "integer"
      - name: "bid"
        in: "path"
        description: "被代理者id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "代理信息"
        required: true
        schema:
          properties:
            beginDate:
              type: "string"
            endDate:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/ProxyUser"
        "747":
          description: "同一时间段有冲突的代理关系"
                
  /proxie/{id}:             
    delete:
      tags:
      - "privilege"
      summary: "auth012: 解除用户代理关系"    
      description: "解除自己"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "代理关系id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
                
  /proxies:
    get:
      tags:
      - "privilege"
      summary: "auth012: 查询所有用户代理关系"    
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "aId"
        in: "query"
        description: "代理者id"
        type: "integer"
      - name: "bId"
        in: "query"
        description: "被代理者id"
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/ProxyUser"

  /allproxie/{id}:              
    delete:
      tags:
      - "privilege"
      summary: "auth012: 禁止代理关系"    
      description: "可以解除所有用户的"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "代理关系id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"

  /roles:
    get:
      tags:
      - "privilege"
      summary: "auth008: 查询角色"
      description: ""
      operationId: "queryRole"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: true
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: true
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Role"
    post:
      tags:
      - "privilege"
      summary: "auth008: 新增角色"    
      description: ""
      operationId: "addRole"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        description: "可修改的用户信息"
        required: true
        schema:
          properties:
            name:
              type: "string"
            desc:
              type: "string"
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                $ref: "#/definitions/Role"
        "736":
          description: "角色名已存在"
  /roles/{id}:
    delete:
      tags:
      - "privilege"
      summary: "auth008： 删除角色"    
      description: ""
      operationId: "delRole"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "角色id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
    put:
      tags:
      - "privilege"
      summary: "auth008:修改角色信息"
      description: ""
      operationId: "changeRole"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "角色id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "可修改的角色信息"
        required: true
        schema:
          properties:
            name:
              type: "string"
            desc:
              type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "736":
          description: "角色名已存在"
  
  /adminusers/{id}/roles:
    get:
      tags:
      - "privilege"
      summary: "auth010: 查看所有用户的角色"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        in: "header"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "用户id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/UserRole"  
                
  /adminusers/self/roles:
    get:
      tags:
      - "privilege"
      summary: "auth010: 查看自己的角色"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        in: "header"
        description: "用户token"
        required: true
        type: "string"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
              errmsg: 
                type: "string"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/UserRole"  

  /roles/{roleid}/privileges/{privilegeid}:
    post:
      tags:
      - "privilege"
      summary: "auth011:给角色增加权限"    
      description: ""
      operationId: "assignPrivilege"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "roleid"
        in: "path"
        description: "角色id"
        required: true
        type: "integer"
      - name: "privilegeid"
        in: "path"
        description: "权限id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                $ref: "#/definitions/RolePrivilege"

  /roleprivileges/{id}:
    delete:
      tags:
      - "privilege"
      summary: "auth011: 取消角色权限"    
      description: ""
      operationId: "revokePrivilege"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "角色权限id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
                
  /roles/{id}/privileges:
    get:
      tags:
      - "privilege"
      summary: "auth011：查询角色权限"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "角色id"
        required: true
        type: "integer"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/RolePrivilege"
                
  /privileges:
    get:
      tags:
      - "privilege"
      summary: "查询权限"
      description: ""
      operationId: "queryPrivilege"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "用户token"
        required: true
        type: "string"
      - name: "url"
        in: "query"
        description: "访问url"
        type: "string"
      - name: "requestType"
        in: "query"
        description: "请求类型"
        type: "integer"
      - name: "page"
        in: "query"
        description: "页码"
        type: "integer"
        required: true
      - name: "pageSize"
        in: "query"
        description: "每页数目"
        type: "integer"
        required: true
      responses:
        "default":
          description: ""
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: "0"
              errmsg: 
                type: "string"
                example: "成功"
              data:
                type: "object"
                properties:
                  page:
                    type: "integer"                  
                    description: "页码"
                  pageSize:
                    description: "每页数目"
                    type: "integer"
                  total:
                    description: "总数"
                    type: "integer"
                  pages:
                    description: "总页数"
                    type: "integer"
                  list:  
                    type: "array"
                    items:
                      $ref: "#/definitions/Privilege"

  /privileges/{id}:
    put:
      tags:
      - "privilege"
      summary: "修改权限信息"
      description: ""
      operationId: "changePrivilege"
      produces:
      - "application/json"
      parameters:
      - name: "authorization"
        type: "string"
        in: "header"
        description: "用户token"
        required: true
      - name: "id"
        in: "path"
        description: "权限id"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "可修改的权限信息"
        required: true
        schema:
          properties:
            name:
              type: "string"
            url:
              type: "string"
            requestType:
              type: "integer"
              format: "int32"
      responses:
        "default":
          description: "成功"
          schema:
            type: "object"
            properties:
              errno:
                type: "integer"
                example: 0
              errmsg: 
                type: "string"
                example: "成功"
        "742":
          description: "权限url与RequestType重复"


definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      userName:
        type: "string"
      realName:
        type: "string"
      mobile:
        type: "string"
      email:
        type: "string"
      gender:
        type: "string"
        description: "0:男/1:女"
      birthday:
        type: "string"
        format: "YYYY-MM-DD"
        description: "用户生日，格式定义为年-月-日"

  SimpleUser:
    type: "object"
    properties:
      id:
        type: "integer"
      userName:
        type: "string"
      realName:
        type: "string"

  Cart:
    type: "object"
    properties:
      id:
        type: "integer"
      goodSkuId:
        type: "string"
      skuName:
        type: "integer"
        description: "规格名称"
      spuName:
        type: "integer"
        description: "商品名称"
      quantity:
        type: "string"
      addTime:
        type: "string"
      price:
        type: "integer"
        description: "商品被加入购物车时的价格"
      couponActivity:
        type: "array"
        description: "适用的优惠活动"
        items:
            properties:
              id:
                type: "integer"
              name:
                type: "string"
              beginTime:
                type: "string"
              endTime:
                type: "string"

  FootPrint:
    type: "object"
    properties:
      id:
        type: "integer"
      goodsSpuId: 
        description: "商品SpuID"
        type: "integer"
      gmtCreateTime:
        description: "浏览时间"
        type: "string"

  TimeSegment:
    type: "object"
    properties:
      id:
        type: "integer"
      beginTime:
        type: "string"
        description: "开始时间"
      endTime: 
        type: "string"
        description: "结束时间"
      gmtCreateTime:
        type: "string"
      gmtModiTime:
        type: "string" 
  
  Advertisement: 
    type: "object"
    properties:
      id:
        type: "integer"
      link:
        type: "string"
        description: "链接"
      imagePath:
        type: "string"
        description: "广告图片路径"
      content:
        type: "string"
      segId:
        type: "integer"
        description: "广告时间段"
      state:
        type: "string"
        description: "状态"
      weight:
        type: "string"
        description: "排序权重"
      default:
        type: "boolean"
      beginDate:
        type: "string"
        description: "开始日期"
      endDate:
        type: "string"
        description: "结束日期"
      repeat:
        type: "boolean"
      gmtCreateTime:
        type: "string"
        description: "是否为每日重复广告"
      gmtModiTime:
        type: "string"   
          
  Collection:
    type: "object"
    properties:
      id:
        type: "integer"
      goodSpuID:
        type: "integer"
        
  Region:
    type: "object"
    properties:
      id:
        type: "integer"
      pid:
        type: "integer"
        description: "上级id"
      name:
        type: "string"
      postalCode:
        type: "string"
      state:
        type: "integer"
        description: "0有效/1废除"
      gmtCreateTime:
        type: "string"
      gmtModiTime:
        type: "string"   
  
  Address:
    type: "object"
    properties:
      id:
        type: "integer"
      region_id:
        type: "integer"
      detail:
        type: "string"
      consignee:
        type: "string"
      mobile:
        type: "string"
      default:
        type: "boolean"
      gmtCreateTime:
        type: "string"
      gmtModiTime:
        type: "string"  
        
  Share:
    description: "分享结果"
    type: "object"
    properties:
      id:
        type: "string"
      shareId:
        type: "string"
      goodsSpuId:
        type: "string"
      quantity:
        type: "integer"
        description: "成功返点的商品件数"
      gmtCreateTime:
        type: "integer"
  
  BeShared:
    description: "分享成功"
    type: "object"
    properties:
      id:
        type: "integer"
      goodsSpuId:
        type: "integer"
      shareId:
        type: "integer"
      customerId:
        type: "integer"
      orderId:
        type: "integer"
        default: 0
      rebate:
        type: "integer"
      gmtCreatetime:
        type: "string"
        format: "YYYY-MM-DD"
        description: "点击时间"
  
  ShareActivity:
    description: "分享活动"
    type: "object"
    properties:
      id:
        type: "integer"
      shopId:
        type: "integer"
        description: "0表示该活动为平台发布，其他为商家发布"
      goodSpuId:
        type: "string"
      beginTime: 
        type: "string"
        format: "YYYY-MM-DD"
      endTime: 
        type: "string"
        format: "YYYY-MM-DD"
      state:
        type: "integer"
        description: "状态：0 待发布，1 发布"
  
  SimpleAftersale:
    description: "售后服务"
    type: "object"
    properties:
      id:
        type: "integer"
      orderId:
        type: "integer"
      orderItemId:
        type: "integer"
      customerId:
        type: "integer"
      shopId:
        type: "string"
      serviceSn:
        type: "string"
      type:
        type: "integer"
        description: "0换货，1退货"
      reason:
        type: "string"
      refund:
        type: "integer"
        description: "退款金额"
      quantity:
        type: "integer"
        description: "货物数量"
      regionId:
        type: "integer"
      detail:
        type: "string"
        description: "详细地址"
      consignee:
        type: "string"
      mobile:
        type: "string"
      logSn:
        type: "string"
      state: 
        type: "integer"
  
  Aftersale:
    description: "售后服务"
    type: "object"
    properties:
      id:
        type: "integer"
      orderId:
        type: "integer"
      orderSn:
        type: "string"
      orderItemId:
        type: "integer"
      skuId:
        type: "integer"
      skuName:
        type: "string"
      customerId:
        type: "integer"
      shopId:
        type: "string"
      serviceSn:
        type: "string"
      type:
        type: "integer"
        description: "0换货，1退货"
      reason:
        type: "string"
      refund:
        type: "integer"
        description: "退款金额"
      quantity:
        type: "integer"
        description: "货物数量"
      regionId:
        type: "integer"
      detail:
        type: "string"
        description: "详细地址"
      consignee:
        type: "string"
      mobile:
        type: "string"
      logSn:
        type: "string"
      state: 
        type: "integer"      
  
  SimpleAdminUser:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      userName:
        type: "string"

  AdminUser:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      userName:
        type: "string"
      mobile:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
      avatar:
        type: "string"
      lastLoginTime:
        type: "string"
      lastLoginIp:
        type: "string"
      status:
        type: "integer"
        format: "int32"
        description: "用户状态"
      depart_id:
        type: "integer"
        format: "int64"
      gmtCreate:
        type: "string"
      gmtModified:
        type: "string"
        
  ProxyUser:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      userA:
        $ref: "#/definitions/SimpleAdminUser"
      userB:
        $ref: "#/definitions/SimpleAdminUser"        
      beginDate:
        type: "string"
      endDate:
        type: "string"
      valid:
        type: "boolean"
      gmtCreate:
        type: "string"
    
  SimpleRole:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name: 
        type: "string"

    
  Role:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name: 
        type: "string"
      desc:
        type: "string"
      createdBy:
        type: "string"
      gmtCreate:
        type: "string"
      gmtModified:
        type: "string"
  
  UserRole:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      user:
        $ref: "#/definitions/SimpleAdminUser"
      role:
        $ref: "#/definitions/SimpleRole"
      creator:
        $ref: "#/definitions/SimpleAdminUser"
      gmtModified:
        type: "string"        
  
  SimplePrivilege:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name: 
        type: "string"
  
        
  Privilege:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name: 
        type: "string"
      url:
        type: "string"
      requestType:
        type: "integer"
        format: "int32"
      gmtCreate:
        type: "string"
      gmtModified:
        type: "string"  

  RolePrivilege:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      role:
        $ref: "#/definitions/SimpleRole"
      privilege:
        $ref: "#/definitions/SimplePrivilege"
      creator:
        $ref: "#/definitions/SimpleAdminUser"
      gmtModified:
        type: "string"        
        
  State:
    type: "object"
    properties:
      code:
        type: "integer"
      name: 
        type: "string"
        

  OrderItem:
    description: "订单明细"
    type: "object"
    properties:
      skuId:
        description: "sku id"
        type: "integer"
        format: "int64"
      orderId:
        description: "订单id"
        type: "integer"
        format: "int64"
      name:
        description: "商品被下单时的名称"
        type: "string"
      quantity:
        description: "订购数量"
        type: "integer"
        format: "int32"
      price:
        description: "下单时商品单价"
        type: "integer"
        format: "int64"
      discount:
        description: "优惠金额"
        type: "integer"
        format: "int64"
      couponId:
        description: "使用的优惠券 id"
        type: "integer"
        format: "int64"
      couponActivityId:
        description: "使用的优惠活动 id"
        type: "integer"
        format: "int64"
      beSharedId:
        description: "分享成功id，如果该订单分享返点了，否则为0"
        type: "integer"
        format: "int64"
  
  SimpleOrderInfo:
    description: "订单概要信息"
    type: "object"
    properties:
      id:
        description: "订单id"
        type: "integer"
        format: "int64"
      customerId:
        description: "用户id"
        type: "integer"
        format: "int64"
      shopId:
        description: "店铺号"
        type: "integer"
        format: "int64"
      pid:
        description: "母单id"
        type: "integer"
        format: "int64"
      orderType:
        description: "订单的类别"
        type: "integer"
        format: "int32"
      state:
        description: "订单状态"
        type: "integer"
        format: "int32"
      subState:
        description: "订单子状态"
        type: "integer"
        format: "int32"
      gmtCreateTime:
        description: "订单创建时间"
        type: "integer"
        format: "timestamp"
      originPrice:
        description: "订单商品优惠前价格"
        type: "integer"
        format: "int64"
      discountPrice:
        description: "订单优惠价格"
        type: "integer"
        format: "int64"
      freightPrice:
        description: "运费"
        type: "integer"
        format: "int64"
  
  OrderInfo:
    description: "订单的完整信息"
    type: "object"
    properties:
      id:
        description: "订单id"
        type: "integer"
        format: "int64"
      customer:
        $ref: "#/definitions/SimpleUser"
      shop:
        $ref: "#/definitions/Shop"
      pid:
        description: "母单id"
        type: "integer"
        format: "int64"
      orderType:
        description: "订单的类别"
        type: "integer"
        format: "int32"
      state:
        description: "订单状态"
        type: "integer"
        format: "int32"
      subState:
        description: "订单子状态"
        type: "integer"
        format: "int32"
      gmtCreateTime:
        description: "订单创建时间"
        type: "integer"
        format: "timestamp"
      originPrice:
        description: "订单商品优惠前价格"
        type: "integer"
        format: "int64"
      discountPrice:
        description: "订单优惠价格"
        type: "integer"
        format: "int64"
      freightPrice:
        description: "运费"
        type: "integer"
        format: "int64"
      message:
        description: "附言"
        type: "string"
      consignee:
        description: "收货人"
        type: "string"
      couponId:
        description: "使用的优惠卷id"
        type: "integer"
        format: "int64"
      couponActivityId:
        description: "优惠活动id"
        type: "integer"
        format: "int64"
      grouponId:
        description: "团购活动id"
        type: "integer"
        format: "int64"
      orderItems:
        description: "所有订单内容物的完整信息"
        type: "array"
        items:
          $ref: "#/definitions/OrderItem"

  FreightModel:
    description: "运费模板"
    type: "object"
    properties:
      id:
        description: "运费模板id"
        type: "integer"
        format: "int64"
      name:
        description: "卖家定义的运费模板名"
        type: "string"
      type:
        description: "运费模板类型"
        type: "integer"
      default:
        description: "默认模板"
        type: "boolean"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"     
        
  WeightModelItem:
    description: "重量运费模版内容"
    type: "object"
    properties:
      id:
        type: "integer"
        description: "id"
      firstWeight:
        description: "首重"
        type: "integer"
      firstWeightFreight:
        description: "首重价格"
        type: "integer"
        format: "int32"
      tenPrice:
        description: "10kg以下每0.5kg价格"
        type: "integer"
        format: "int32"
      fiftyPrice:
        description: "50kg以下每0.5kg价格"
        type: "integer"
        format: "int32" 
      hundredPrice:
        description: "100kg以下每0.5kg价格"
        type: "integer"
        format: "int32"
      trihunPrice:
        description: "300kg以下每0.5kg价格"
        type: "integer"
        format: "int32"
      abovePrice:
        description: "300kg以上每0.5kg价格"
        type: "integer"
        format: "int32"
      regionId:
        description: "抵达地区码"
        type: "integer"
        format: "int64"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"   

  PieceModelItem:
    description: "按件数运费模版内容"
    type: "object"
    properties:
      id:
        type: "integer"
        description: "id"
      regionId:
        description: "抵达地区码"
        type: "integer"
        format: "int64"
      firstItem:
        description: "首件数"
        type: "integer"
        format: "int32"
      firstItemPrice:
        description: "规则首件运费"
        type: "integer"
        format: "int64"
      additionalItems:
        description: "规则续件数"
        type: "integer"
        format: "int32"
      additionalItemsPrice:
        description: "规则续件运费"
        type: "integer"
        format: "int64"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"   

  Payment:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "支付id"
      orderId:
        type: "integer"
        description: "订单id"
      amount:
        type: "integer"
        description: "支付金额"
      actualAmount:
        type: "integer"
        description: "实际支付金额"
      payTime:
        type: "string"
        format: "datetime"
        description: "支付时间"
      paymentPattern:
        type: "string"
        description: "支付渠道"
      state:
        type: "integer"
        description: "支付状态"
      beginTime:
        type: "string"
        format: "datetime"
        description: "开始支付时间"
      endTime:
        type: "string"
        format: "datetime"
        description: "结束支付时间"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"   
  
  Refund:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "退款id"
      paymentId:
        type: "integer"
        description: "支付id"
      amount:
        type: "integer"
        description: "退款金额"
      state:
        type: "integer"
        description: "支付状态"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间" 
        
  CouponSpu:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      activityId:
        type: "integer"
        format: "int64"
        description: "活动id"
      spu:
        $ref: "#/definitions/SimpleSpu"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"  

  SimpleCoupon:
    type: "object"
    description: "优惠卷"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "优惠卷id"
      activity:
        $ref: "#/definitions/SimpleCouponActivity"
      name:
        type: "string"
        description: "优惠券名称"
      couponSn:
        type: "string"
        description: "优惠券编号"

  Coupon:
    type: "object"
    description: "优惠卷"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "优惠卷id"
      activity:
        $ref: "#/definitions/SimpleCouponActivity"
      customerId:
        type: "integer"
        format: "int64"
        description: "顾客ID"
      name:
        type: "string"
        description: "优惠券名称"
      couponSn:
        type: "string"
        description: "优惠券编号"
      state:
        type: "integer"
        description: "优惠卷状态"
      beginTime:
        type: "string"
        format: "datetime"
        description: "活动开始时间"
      endTime:
        type: "string"
        format: "datetime"
        description: "活动结束时间"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"

  SimpleCouponActivity:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "活动id"
      name:
        type: "string"
        description: "优惠活动名称"
      imageUrl:
        type: "string"
        description: "图片链接"  
      beginTime:
        type: "string"
        format: "datetime"
        description: "活动开始时间"
      endTime:
        type: "string"
        format: "datetime"
        description: "活动结束时间"  
      quantity:
        type: "integer"
        format: "int32"
        description: "优惠券数目，0-不用优惠券"
      couponTime:
        type: "string"
        format: "datetime"
        description: "开始领优惠卷时间"  

  CouponActivity:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "活动id"
      name:
        type: "string"
        description: "优惠活动名称"
      state:
        type: "integer"
        description: "活动状态"
      shop:
        $ref: "#/definitions/SimpleShop"
      quantity:
        type: "integer"
        format: "int32"
        description: "优惠券数目，0-不用优惠券"
      quantityType:
        type: "integer"
        description: "0-每人数量，1-总数控制"
      validTerm:
        type: "integer"
        description: "从领取那天起的有效时间，0-与活动同"
      imageUrl:
        type: "string"
        description: "图片链接"    
      beginTime:
        type: "string"
        format: "datetime"
        description: "活动开始时间"
      endTime:
        type: "string"
        format: "datetime"
        description: "活动结束时间"
      couponTime:
        type: "string"
        format: "datetime"
        description: "开始领优惠卷时间"
      strategy:
        type: "string"
        description: "活动规则JSON"
      createdBy:
        $ref: "#/definitions/SimpleAdminUser"
      ModiBy:
        $ref: "#/definitions/SimpleAdminUser"        
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"

  SimpleCategory:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"

  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      pid:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      parentId:
        type: "integer"
        format: "int64"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"
        
  Comment:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "评论id"
      customer:
        $ref: "#/definitions/SimpleUser"
      goodsSkuId:
        type: "integer"
        format: "int64"
        description: "评论的SKU ID"
      type:
        type: "integer"
        description: "0好评，1中评，2差评"
      content:
        type: "string"
        description: "内容"
      state:
        type: "integer"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"

  FloatPrice:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "id"
      activityPrice:
        type: "integer"
        format: "int64"
        description: "浮动价格"
      quantity:
        type: "integer"
        format: "int64"
        description: "可销售的数量"
      beginTime:
        type: "string"
        format: "datetime"
        description: "开始时间"
      endTime:
        type: "string"
        format: "datetime"
        description: "结束时间"
      createdBy:
        $ref: "#/definitions/SimpleAdminUser"
      modifiedBy:
        $ref: "#/definitions/SimpleAdminUser"
      valid:
        type: "boolean"
        description: "有效/无效"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"  
  
  SimpleGrouponActivity:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "活动id"
      name:
        type: "string"
        description: "活动名称"
      beginTime:
        type: "string"
        format: "datetime"
        description: "开始时间"
      endTime:
        type: "string"
        format: "datetime"
        description: "结束时间"      
  
  GrouponActivity:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "活动id"
      name:
        type: "string"
        description: "活动名称"
      goodsSpu:
        $ref: "#/definitions/SimpleSpu"
      shop:
        $ref: "#/definitions/SimpleShop"
      strategy:
        type: "string"
        format: "团购规则JSON"
      state:
        type: "integer"
        format: "活动状态"
      beginTime:
        type: "string"
        format: "datetime"
        description: "开始时间"
      endTime:
        type: "string"
        format: "datetime"
        description: "结束时间"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"    

  SimplePresaleActivity:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "预售活动id"
      name:
        type: "string"
        description: "活动名称"        
      BeginTime:
        type: "string"
        format: "datetime"
        description: "活动开始时间"
      payTime:
        type: "string"
        format: "datetime"
        description: "开始支付尾款时间"
      endTime:
        type: "string"
        format: "datetime"
        description: "活动结束时间"
      advancePayPrice: 
        type: "integer"
        format: "int64"
        description: "定金"
      restPayPrice: 
        type: "integer"
        format: "int64"
        description: "尾款"  

  PresaleActivity:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "预售活动id"
      name:
        type: "string"
        description: "活动名称"        
      BeginTime:
        type: "string"
        format: "datetime"
        description: "活动开始时间"
      payTime:
        type: "string"
        format: "datetime"
        description: "开始支付尾款时间"
      endTime:
        type: "string"
        format: "datetime"
        description: "活动结束时间"
      goodsSpu:
        $ref: "#/definitions/SimpleSpu"
      shop:
        $ref: "#/definitions/SimpleShop"
      state:
        type: "string"
        description: "活动状态"
      quantity: 
        type: "integer"
        format: "int64"
        description: "活动库存量"
      advancePayPrice: 
        type: "integer"
        format: "int64"
        description: "定金"
      restPayPrice: 
        type: "integer"
        format: "int64"
        description: "尾款"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"  

  FlashSale:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "秒杀id"
      flashDate:
        type: "string"
        format: "datetime"
        description: "秒杀时间"
      timeSeq:
        $ref: "#/definitions/TimeSegment"
      imageUrl:
        type: "string"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"

  FlashSaleItem:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "秒杀Item id"
      goodsSku:
        $ref: "#/definitions/SimpleSku"
      price:
        type: "integer"
      quantity:
        type: "integer"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"

  SimpleSpu:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "SPU ID"
      name:
        type: "string"
      goodsSn:
        type: "string"
      imageUrl:
        type: "string"
      state:
        type: "integer"
        description: "商品状态"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"
      disable:
        type: "boolean"
        default: false
        description: "是否被逻辑删除"

  Spu:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "SPU ID"
      name:
        type: "string"
      brand:
        $ref: "#/definitions/SimpleBrand"
      category:
        $ref: "#/definitions/SimpleCategory"
      freight:
        $ref: "#/definitions/FreightModel"
      shop:
        $ref: "#/definitions/SimpleShop"
      goodsSn:
        type: "string"
      detail:
        type: "string"
        description: "商品详细描述"
      imageUrl:
        type: "string"
      state:
        type: "integer"
        description: "商品状态"
      spec:
        $ref: "#/definitions/Spec"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"
      disable:
        type: "boolean"
        default: false
        description: "是否被逻辑删除"

  Sku:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "SKU ID"
      name:
        type: "string"
      skuSn:
        type: "string"
      detail:
        type: "string"
        description: "详细描述"
      imageUrl:
        type: "string"
      inventory:
        type: "integer"
        description: "库存"
      configuration:
        type: "string"
        description: "配置参数JSON"
      weight:
        type: "integer"
        description: "重量"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"
      spu:
        $ref: "#/definitions/Spu"
      disable:
        type: "boolean"
        default: false
        description: "是否被逻辑删除"

  SimpleSku:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "SKU ID"
      name:
        type: "string"
      skuSn:
        type: "string"
      detail:
        type: "string"
        description: "详细描述"
      imageUrl:
        type: "string"
      inventory:
        type: "integer"
        description: "库存"
      configuration:
        type: "string"
        description: "配置参数JSON"
      weight:
        type: "integer"
        description: "重量"
      gmtCreateTime:
        type: "string"
        format: "datetime"
        description: "创建时间"
      gmtModiTime:
        type: "string"
        format: "datetime"
        description: "修改时间"
      disable:
        type: "boolean"
        default: false
        description: "是否被逻辑删除"

  Spec:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "spec id"
      name:
        type: "string"
        description: "规格名称"
      specItems:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
              description: "spec id"
            name:
              type: "string"
              description: "规格内容"
            
  SimpleBrand:
    type: "object"
    properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        imageUrl:
          type: "string"

  Brand:
    type: "object"
    properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        imageUrl:
          type: "string"
        detail:
          type: "string"
        gmtCreateTime:
          type: "string"
          format: "datetime"
          description: "创建时间"
        gmtModiTime:
          type: "string"
          format: "datetime"
          description: "修改时间"

  SimpleShop:
    type: "object"
    properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"

  Shop:
    type: "object"
    properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        gmtCreateTime:
          type: "string"
          format: "datetime"
          description: "创建时间"
        gmtModiTime:
          type: "string"
          format: "datetime"
          description: "修改时间"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /mingqcn/OOMALL/1.0.3